DIGEST 22fe320176735d55a2eac2fdb3b6afd7
FImp
R1676:1680 SfLib <> <> lib
mod 2146:2149 <> AExp
ind 2266:2269 AExp aexp
constr 2285:2288 AExp ANum
constr 2308:2312 AExp APlus
constr 2341:2346 AExp AMinus
constr 2375:2379 AExp AMult
R2299:2302 Imp <> aexp ind
R2292:2294 Coq.Init.Datatypes <> nat ind
R2332:2335 Imp <> aexp ind
R2324:2327 Imp <> aexp ind
R2316:2319 Imp <> aexp ind
R2366:2369 Imp <> aexp ind
R2358:2361 Imp <> aexp ind
R2350:2353 Imp <> aexp ind
R2399:2402 Imp <> aexp ind
R2391:2394 Imp <> aexp ind
R2383:2386 Imp <> aexp ind
ind 2416:2419 AExp bexp
constr 2435:2439 AExp BTrue
constr 2452:2457 AExp BFalse
constr 2470:2472 AExp BEq
constr 2501:2503 AExp BLe
constr 2532:2535 AExp BNot
constr 2556:2559 AExp BAnd
R2443:2446 Imp <> bexp ind
R2461:2464 Imp <> bexp ind
R2492:2495 Imp <> bexp ind
R2484:2487 Imp AExp aexp ind
R2476:2479 Imp AExp aexp ind
R2523:2526 Imp <> bexp ind
R2515:2518 Imp AExp aexp ind
R2507:2510 Imp AExp aexp ind
R2547:2550 Imp <> bexp ind
R2539:2542 Imp <> bexp ind
R2579:2582 Imp <> bexp ind
R2571:2574 Imp <> bexp ind
R2563:2566 Imp <> bexp ind
def 5177:5181 AExp aeval
R5188:5191 Imp AExp aexp ind
R5196:5198 Coq.Init.Datatypes <> nat ind
R5211:5211 Imp <> a var
R5222:5225 Imp AExp ANum constr
R5238:5242 Imp AExp APlus constr
R5253:5253 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5262:5266 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5275:5275 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5254:5258 Imp <> aeval def
R5267:5271 Imp <> aeval def
R5281:5286 Imp AExp AMinus constr
R5298:5298 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5307:5311 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5320:5320 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5299:5303 Imp <> aeval def
R5312:5316 Imp <> aeval def
R5326:5330 Imp AExp AMult constr
R5341:5341 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5350:5354 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5363:5363 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5342:5346 Imp <> aeval def
R5355:5359 Imp <> aeval def
def 5381:5391 AExp test_aeval1
R5427:5429 Coq.Init.Logic <> :type_scope:x_'='_x not
R5396:5400 Imp AExp aeval def
R5403:5407 Imp AExp APlus constr
R5419:5422 Imp AExp ANum constr
R5410:5413 Imp AExp ANum constr
def 5537:5541 AExp beval
R5548:5551 Imp AExp bexp ind
R5556:5559 Coq.Init.Datatypes <> bool ind
R5572:5572 Imp <> b var
R5583:5587 Imp AExp BTrue constr
R5598:5601 Coq.Init.Datatypes <> true constr
R5607:5612 Imp AExp BFalse constr
R5622:5626 Coq.Init.Datatypes <> false constr
R5632:5634 Imp AExp BEq constr
R5647:5653 Coq.Arith.EqNat <> beq_nat def
R5667:5671 Imp AExp aeval def
R5656:5660 Imp AExp aeval def
R5681:5683 Imp AExp BLe constr
R5696:5702 SfLib <> ble_nat def
R5716:5720 Imp AExp aeval def
R5705:5709 Imp AExp aeval def
R5730:5733 Imp AExp BNot constr
R5745:5748 Coq.Init.Datatypes <> negb def
R5751:5755 Imp <> beval def
R5765:5768 Imp AExp BAnd constr
R5780:5783 Coq.Init.Datatypes <> andb def
R5797:5801 Imp <> beval def
R5786:5790 Imp <> beval def
def 6200:6213 AExp optimize_0plus
R6218:6221 Imp AExp aexp ind
R6226:6229 Imp AExp aexp ind
R6242:6242 Imp <> a var
R6253:6256 Imp AExp ANum constr
R6269:6272 Imp AExp ANum constr
R6280:6284 Imp AExp APlus constr
R6287:6290 Imp AExp ANum constr
R6307:6320 Imp <> optimize_0plus def
R6329:6333 Imp AExp APlus constr
R6350:6354 Imp AExp APlus constr
R6377:6390 Imp <> optimize_0plus def
R6357:6370 Imp <> optimize_0plus def
R6400:6405 Imp AExp AMinus constr
R6422:6427 Imp AExp AMinus constr
R6450:6463 Imp <> optimize_0plus def
R6430:6443 Imp <> optimize_0plus def
R6473:6477 Imp AExp AMult constr
R6494:6498 Imp AExp AMult constr
R6521:6534 Imp <> optimize_0plus def
R6501:6514 Imp <> optimize_0plus def
def 6687:6705 AExp test_optimize_0plus
R6839:6843 Coq.Init.Logic <> :type_scope:x_'='_x not
R6710:6723 Imp AExp optimize_0plus def
R6726:6730 Imp AExp APlus constr
R6766:6770 Imp AExp APlus constr
R6813:6817 Imp AExp APlus constr
R6829:6832 Imp AExp ANum constr
R6820:6823 Imp AExp ANum constr
R6773:6776 Imp AExp ANum constr
R6733:6736 Imp AExp ANum constr
R6844:6848 Imp AExp APlus constr
R6860:6863 Imp AExp ANum constr
R6851:6854 Imp AExp ANum constr
prf 7083:7102 AExp optimize_0plus_sound
R7141:7143 Coq.Init.Logic <> :type_scope:x_'='_x not
R7117:7121 Imp AExp aeval def
R7124:7137 Imp AExp optimize_0plus def
R7139:7139 Imp <> a var
R7144:7148 Imp AExp aeval def
R7150:7150 Imp <> a var
prf 9256:9260 AExp ev100
R9264:9265 SfLib <> ev ind
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9394:9397 SfLib <> ev_0 constr
R9394:9397 SfLib <> ev_0 constr
prf 9607:9612 AExp ev100'
R9616:9617 SfLib <> ev ind
R9647:9650 SfLib <> ev_0 constr
R9647:9650 SfLib <> ev_0 constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9714:9718 SfLib <> ev_SS constr
R9728:9731 SfLib <> ev_0 constr
R9728:9731 SfLib <> ev_0 constr
prf 10382:10387 AExp silly1
R10410:10412 Coq.Init.Logic <> :type_scope:x_'='_x not
R10402:10406 Imp AExp aeval def
R10408:10409 Imp <> ae var
R10413:10417 Imp AExp aeval def
R10419:10420 Imp <> ae var
prf 10496:10501 AExp silly2
R10529:10529 Imp <> P var
R10524:10524 Imp <> P var
prf 11245:11247 AExp foo
R11272:11274 Coq.Init.Logic <> :type_scope:x_'='_x not
R11261:11267 SfLib <> ble_nat def
R11271:11271 Imp <> n var
R11275:11278 Coq.Init.Datatypes <> true constr
prf 11525:11528 AExp foo'
R11553:11555 Coq.Init.Logic <> :type_scope:x_'='_x not
R11542:11548 SfLib <> ble_nat def
R11552:11552 Imp <> n var
R11556:11559 Coq.Init.Datatypes <> true constr
prf 11890:11910 AExp optimize_0plus_sound'
R11949:11951 Coq.Init.Logic <> :type_scope:x_'='_x not
R11925:11929 Imp AExp aeval def
R11932:11945 Imp AExp optimize_0plus def
R11947:11947 Imp <> a var
R11952:11956 Imp AExp aeval def
R11958:11958 Imp <> a var
prf 14738:14759 AExp optimize_0plus_sound''
R14798:14800 Coq.Init.Logic <> :type_scope:x_'='_x not
R14774:14778 Imp AExp aeval def
R14781:14794 Imp AExp optimize_0plus def
R14796:14796 Imp <> a var
R14801:14805 Imp AExp aeval def
R14807:14807 Imp <> a var
prf 19334:19356 AExp optimize_0plus_sound'''
R19395:19397 Coq.Init.Logic <> :type_scope:x_'='_x not
R19371:19375 Imp AExp aeval def
R19378:19391 Imp AExp optimize_0plus def
R19393:19393 Imp <> a var
R19398:19402 Imp AExp aeval def
R19404:19404 Imp <> a var
def 20651:20666 AExp optimize_0plus_b
R20673:20676 Imp AExp bexp ind
R20681:20684 Imp AExp bexp ind
R20697:20697 Imp <> b var
R20711:20715 Imp AExp BTrue constr
R20721:20721 Imp <> b var
R20730:20735 Imp AExp BFalse constr
R20740:20740 Imp <> b var
R20749:20751 Imp AExp BEq constr
R20760:20762 Imp AExp BEq constr
R20784:20797 Imp AExp optimize_0plus def
R20765:20778 Imp AExp optimize_0plus def
R20809:20811 Imp AExp BLe constr
R20820:20822 Imp AExp BLe constr
R20844:20857 Imp AExp optimize_0plus def
R20825:20838 Imp AExp optimize_0plus def
R20869:20872 Imp AExp BNot constr
R20879:20882 Imp AExp BNot constr
R20893:20896 Imp AExp BAnd constr
R20905:20908 Imp AExp BAnd constr
prf 20931:20952 AExp optimize_0plus_b_sound
R20994:20996 Coq.Init.Logic <> :type_scope:x_'='_x not
R20968:20972 Imp AExp beval def
R20975:20990 Imp AExp optimize_0plus_b def
R20992:20992 Imp <> b var
R20997:21001 Imp AExp beval def
R21003:21003 Imp <> b var
R21083:21102 Imp AExp optimize_0plus_sound thm
R21083:21102 Imp AExp optimize_0plus_sound thm
R21083:21102 Imp AExp optimize_0plus_sound thm
R21083:21102 Imp AExp optimize_0plus_sound thm
R21143:21162 Imp AExp optimize_0plus_sound thm
R21143:21162 Imp AExp optimize_0plus_sound thm
R21143:21162 Imp AExp optimize_0plus_sound thm
R21143:21162 Imp AExp optimize_0plus_sound thm
def 21507:21519 AExp optimize_0mul
R21526:21529 Imp AExp aexp ind
R21534:21537 Imp AExp aexp ind
R21550:21550 Imp <> a var
R21564:21567 Imp AExp ANum constr
R21574:21574 Imp <> a var
R21583:21587 Imp AExp APlus constr
R21596:21600 Imp AExp APlus constr
R21621:21633 Imp <> optimize_0mul def
R21603:21615 Imp <> optimize_0mul def
R21645:21650 Imp AExp AMinus constr
R21659:21664 Imp AExp AMinus constr
R21686:21698 Imp <> optimize_0mul def
R21668:21680 Imp <> optimize_0mul def
R21710:21714 Imp AExp AMult constr
R21717:21720 Imp AExp ANum constr
R21730:21733 Imp AExp ANum constr
R21744:21748 Imp AExp AMult constr
R21757:21761 Imp AExp AMult constr
R21783:21795 Imp <> optimize_0mul def
R21765:21777 Imp <> optimize_0mul def
prf 21816:21833 AExp optimize_0mulSound
R21848:21851 Imp AExp aexp ind
R21877:21879 Coq.Init.Logic <> :type_scope:x_'='_x not
R21854:21858 Imp AExp aeval def
R21861:21873 Imp AExp optimize_0mul def
R21875:21875 Imp <> a var
R21880:21884 Imp AExp aeval def
R21886:21886 Imp <> a var
def 23147:23170 AExp silly_presburger_example
R23230:23233 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R23229:23229 Imp <> m var
R23234:23234 Imp <> p var
R23206:23209 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23197:23200 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R23193:23195 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23192:23192 Imp <> m var
R23196:23196 Imp <> n var
R23202:23204 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23201:23201 Imp <> n var
R23205:23205 Imp <> o var
R23215:23217 Coq.Init.Logic <> :type_scope:x_'='_x not
R23211:23213 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23210:23210 Imp <> o var
R23219:23221 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23218:23218 Imp <> p var
mod 25311:25326 <> AExp.aevalR_first_try
ind 25340:25345 AExp.aevalR_first_try aevalR
constr 25376:25381 AExp.aevalR_first_try E_ANum
constr 25431:25437 AExp.aevalR_first_try E_APlus
constr 25561:25568 AExp.aevalR_first_try E_AMinus
constr 25692:25698 AExp.aevalR_first_try E_AMult
R25357:25359 Coq.Init.Datatypes <> nat ind
R25349:25352 Imp AExp.aevalR_first_try aexp ind
R25397:25399 Coq.Init.Datatypes <> nat ind
R25409:25414 Imp <> aevalR ind
R25425:25425 Imp <> n var
R25417:25420 Imp AExp.aevalR_first_try ANum constr
R25422:25422 Imp <> n var
R25456:25459 Imp AExp.aevalR_first_try aexp ind
R25470:25472 Coq.Init.Datatypes <> nat ind
R25526:25531 Imp <> aevalR ind
R25550:25552 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25548:25549 Imp <> n1 var
R25553:25554 Imp <> n2 var
R25534:25538 Imp AExp.aevalR_first_try APlus constr
R25543:25544 Imp <> e2 var
R25540:25541 Imp <> e1 var
R25504:25509 Imp <> aevalR ind
R25514:25515 Imp <> n2 var
R25511:25512 Imp <> e2 var
R25482:25487 Imp <> aevalR ind
R25492:25493 Imp <> n1 var
R25489:25490 Imp <> e1 var
R25586:25589 Imp AExp.aevalR_first_try aexp ind
R25600:25602 Coq.Init.Datatypes <> nat ind
R25656:25661 Imp <> aevalR ind
R25681:25683 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R25679:25680 Imp <> n1 var
R25684:25685 Imp <> n2 var
R25664:25669 Imp AExp.aevalR_first_try AMinus constr
R25674:25675 Imp <> e2 var
R25671:25672 Imp <> e1 var
R25634:25639 Imp <> aevalR ind
R25644:25645 Imp <> n2 var
R25641:25642 Imp <> e2 var
R25612:25617 Imp <> aevalR ind
R25622:25623 Imp <> n1 var
R25619:25620 Imp <> e1 var
R25717:25720 Imp AExp.aevalR_first_try aexp ind
R25731:25733 Coq.Init.Datatypes <> nat ind
R25787:25792 Imp <> aevalR ind
R25811:25813 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25809:25810 Imp <> n1 var
R25814:25815 Imp <> n2 var
R25795:25799 Imp AExp.aevalR_first_try AMult constr
R25804:25805 Imp <> e2 var
R25801:25802 Imp <> e1 var
R25765:25770 Imp <> aevalR ind
R25775:25776 Imp <> n2 var
R25772:25773 Imp <> e2 var
R25743:25748 Imp <> aevalR ind
R25753:25754 Imp <> n1 var
R25750:25751 Imp <> e1 var
R26374:26379 Imp AExp.aevalR_first_try aevalR ind
not 26359 AExp.aevalR_first_try :type_scope:x_'||'_x
R26405:26420 Imp aevalR_first_try <> mod
ind 26924:26929 AExp aevalR
constr 26960:26965 AExp E_ANum
constr 27009:27015 AExp E_APlus
constr 27120:27127 AExp E_AMinus
constr 27233:27239 AExp E_AMult
R26941:26943 Coq.Init.Datatypes <> nat ind
R26933:26936 Imp AExp aexp ind
R27365:27370 Imp <> aevalR ind
R26979:26981 Coq.Init.Datatypes <> nat ind
R26991:26991 Imp AExp :type_scope:x_'||'_x not
R26998:27002 Imp AExp :type_scope:x_'||'_x not
R26992:26995 Imp AExp ANum constr
R26997:26997 Imp <> n var
R27003:27003 Imp <> n var
R27034:27037 Imp AExp aexp ind
R27049:27051 Coq.Init.Datatypes <> nat ind
R27089:27089 Imp AExp :type_scope:x_'||'_x not
R27101:27106 Imp AExp :type_scope:x_'||'_x not
R27114:27114 Imp AExp :type_scope:x_'||'_x not
R27090:27094 Imp AExp APlus constr
R27099:27100 Imp <> e2 var
R27096:27097 Imp <> e1 var
R27109:27111 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27107:27108 Imp <> n1 var
R27112:27113 Imp <> n2 var
R27078:27081 Imp AExp :type_scope:x_'||'_x not
R27076:27077 Imp <> e2 var
R27082:27083 Imp <> n2 var
R27064:27067 Imp AExp :type_scope:x_'||'_x not
R27062:27063 Imp <> e1 var
R27068:27069 Imp <> n1 var
R27146:27149 Imp AExp aexp ind
R27161:27163 Coq.Init.Datatypes <> nat ind
R27201:27201 Imp AExp :type_scope:x_'||'_x not
R27214:27219 Imp AExp :type_scope:x_'||'_x not
R27227:27227 Imp AExp :type_scope:x_'||'_x not
R27202:27207 Imp AExp AMinus constr
R27212:27213 Imp <> e2 var
R27209:27210 Imp <> e1 var
R27222:27224 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R27220:27221 Imp <> n1 var
R27225:27226 Imp <> n2 var
R27190:27193 Imp AExp :type_scope:x_'||'_x not
R27188:27189 Imp <> e2 var
R27194:27195 Imp <> n2 var
R27176:27179 Imp AExp :type_scope:x_'||'_x not
R27174:27175 Imp <> e1 var
R27180:27181 Imp <> n1 var
R27259:27262 Imp AExp aexp ind
R27274:27276 Coq.Init.Datatypes <> nat ind
R27314:27314 Imp AExp :type_scope:x_'||'_x not
R27326:27331 Imp AExp :type_scope:x_'||'_x not
R27339:27339 Imp AExp :type_scope:x_'||'_x not
R27315:27319 Imp AExp AMult constr
R27324:27325 Imp <> e2 var
R27321:27322 Imp <> e1 var
R27334:27336 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27332:27333 Imp <> n1 var
R27337:27338 Imp <> n2 var
R27303:27306 Imp AExp :type_scope:x_'||'_x not
R27301:27302 Imp <> e2 var
R27307:27308 Imp <> n2 var
R27289:27292 Imp AExp :type_scope:x_'||'_x not
R27287:27288 Imp <> e1 var
R27293:27294 Imp <> n1 var
R27365:27370 Imp AExp aevalR ind
not 27350 AExp :type_scope:x_'||'_x
prf 30410:30425 AExp aeval_iff_aevalR
R30443:30443 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30450:30455 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R30445:30448 Imp AExp :type_scope:x_'||'_x not
R30444:30444 Imp <> a var
R30449:30449 Imp <> n var
R30463:30465 Coq.Init.Logic <> :type_scope:x_'='_x not
R30456:30460 Imp AExp aeval def
R30462:30462 Imp <> a var
R30466:30466 Imp <> n var
R30955:30960 Imp AExp E_ANum constr
R30955:30960 Imp AExp E_ANum constr
R30992:30998 Imp AExp E_APlus constr
R30992:30998 Imp AExp E_APlus constr
R31093:31100 Imp AExp E_AMinus constr
R31093:31100 Imp AExp E_AMinus constr
R31194:31200 Imp AExp E_AMult constr
R31194:31200 Imp AExp E_AMult constr
prf 31745:31761 AExp aeval_iff_aevalR'
R31779:31779 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R31786:31791 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R31781:31784 Imp AExp :type_scope:x_'||'_x not
R31780:31780 Imp <> a var
R31785:31785 Imp <> n var
R31799:31801 Coq.Init.Logic <> :type_scope:x_'='_x not
R31792:31796 Imp AExp aeval def
R31798:31798 Imp <> a var
R31802:31802 Imp <> n var
ind 32233:32238 AExp bevalR
constr 32269:32278 AExp beval_true
constr 32303:32313 AExp beval_false
constr 32340:32347 AExp beval_eq
constr 32437:32444 AExp beval_le
constr 32534:32542 AExp beval_not
constr 32603:32611 AExp beval_and
R32250:32253 Coq.Init.Datatypes <> bool ind
R32242:32245 Imp AExp bexp ind
R32282:32287 Imp <> bevalR ind
R32295:32298 Coq.Init.Datatypes <> true constr
R32289:32293 Imp AExp BTrue constr
R32317:32322 Imp <> bevalR ind
R32331:32335 Coq.Init.Datatypes <> false constr
R32324:32329 Imp AExp BFalse constr
R32399:32404 Imp <> bevalR ind
R32419:32425 Coq.Arith.EqNat <> beq_nat def
R32430:32431 Imp <> n2 var
R32427:32428 Imp <> n1 var
R32407:32409 Imp AExp BEq constr
R32414:32415 Imp <> e2 var
R32411:32412 Imp <> e1 var
R32388:32391 Imp AExp :type_scope:x_'||'_x not
R32386:32387 Imp <> e2 var
R32392:32393 Imp <> n2 var
R32374:32377 Imp AExp :type_scope:x_'||'_x not
R32372:32373 Imp <> e1 var
R32378:32379 Imp <> n1 var
R32496:32501 Imp <> bevalR ind
R32516:32522 SfLib <> ble_nat def
R32527:32528 Imp <> n2 var
R32524:32525 Imp <> n1 var
R32504:32506 Imp AExp BLe constr
R32511:32512 Imp <> e2 var
R32508:32509 Imp <> e1 var
R32485:32488 Imp AExp :type_scope:x_'||'_x not
R32483:32484 Imp <> e2 var
R32489:32490 Imp <> n2 var
R32471:32474 Imp AExp :type_scope:x_'||'_x not
R32469:32470 Imp <> e1 var
R32475:32476 Imp <> n1 var
R32574:32579 Imp <> bevalR ind
R32592:32595 Coq.Init.Datatypes <> negb def
R32597:32597 Imp <> b var
R32582:32585 Imp AExp BNot constr
R32587:32588 Imp <> e1 var
R32559:32564 Imp <> bevalR ind
R32569:32569 Imp <> b var
R32566:32567 Imp <> e1 var
R32667:32672 Imp <> bevalR ind
R32690:32693 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R32688:32689 Imp <> b1 var
R32694:32695 Imp <> b2 var
R32675:32678 Imp AExp BAnd constr
R32683:32684 Imp <> e2 var
R32680:32681 Imp <> e1 var
R32651:32656 Imp <> bevalR ind
R32661:32662 Imp <> b2 var
R32658:32659 Imp <> e2 var
R32635:32640 Imp <> bevalR ind
R32645:32646 Imp <> b1 var
R32642:32643 Imp <> e1 var
prf 32708:32721 AExp bevalIffBevalR
R32748:32752 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32744:32746 Coq.Init.Logic <> :type_scope:x_'='_x not
R32737:32741 Imp AExp beval def
R32743:32743 Imp <> e var
R32747:32747 Imp <> b var
R32753:32758 Imp AExp bevalR ind
R32762:32762 Imp <> b var
R32760:32760 Imp <> e var
R32889:32898 Imp AExp beval_true constr
R32889:32898 Imp AExp beval_true constr
R33004:33014 Imp AExp beval_false constr
R33004:33014 Imp AExp beval_false constr
R33092:33099 Imp AExp beval_eq constr
R33092:33099 Imp AExp beval_eq constr
R33108:33124 Imp AExp aeval_iff_aevalR' thm
R33108:33124 Imp AExp aeval_iff_aevalR' thm
R33154:33170 Imp AExp aeval_iff_aevalR' thm
R33154:33170 Imp AExp aeval_iff_aevalR' thm
R33261:33268 Imp AExp beval_le constr
R33261:33268 Imp AExp beval_le constr
R33277:33293 Imp AExp aeval_iff_aevalR' thm
R33277:33293 Imp AExp aeval_iff_aevalR' thm
R33322:33338 Imp AExp aeval_iff_aevalR' thm
R33322:33338 Imp AExp aeval_iff_aevalR' thm
R33425:33433 Imp AExp beval_not constr
R33425:33433 Imp AExp beval_not constr
R33536:33544 Imp AExp beval_and constr
R33536:33544 Imp AExp beval_and constr
R33706:33722 Imp AExp aeval_iff_aevalR' thm
R33706:33722 Imp AExp aeval_iff_aevalR' thm
R33736:33752 Imp AExp aeval_iff_aevalR' thm
R33736:33752 Imp AExp aeval_iff_aevalR' thm
R33830:33846 Imp AExp aeval_iff_aevalR' thm
R33830:33846 Imp AExp aeval_iff_aevalR' thm
R33860:33876 Imp AExp aeval_iff_aevalR' thm
R33860:33876 Imp AExp aeval_iff_aevalR' thm
R34068:34071 Imp <> <> mod
mod 34895:34909 <> aevalR_division
ind 35048:35051 aevalR_division aexp
constr 35067:35070 aevalR_division ANum
constr 35090:35094 aevalR_division APlus
constr 35123:35128 aevalR_division AMinus
constr 35157:35161 aevalR_division AMult
constr 35190:35193 aevalR_division ADiv
R35081:35084 Imp <> aexp ind
R35074:35076 Coq.Init.Datatypes <> nat ind
R35114:35117 Imp <> aexp ind
R35106:35109 Imp <> aexp ind
R35098:35101 Imp <> aexp ind
R35148:35151 Imp <> aexp ind
R35140:35143 Imp <> aexp ind
R35132:35135 Imp <> aexp ind
R35181:35184 Imp <> aexp ind
R35173:35176 Imp <> aexp ind
R35165:35168 Imp <> aexp ind
R35213:35216 Imp <> aexp ind
R35205:35208 Imp <> aexp ind
R35197:35200 Imp <> aexp ind
ind 35473:35478 aevalR_division aevalR
constr 35509:35514 aevalR_division E_ANum
constr 35558:35564 aevalR_division E_APlus
constr 35669:35676 aevalR_division E_AMinus
constr 35782:35788 aevalR_division E_AMult
constr 35894:35899 aevalR_division E_ADiv
R35490:35492 Coq.Init.Datatypes <> nat ind
R35482:35485 Imp aevalR_division aexp ind
R36038:36043 Imp <> aevalR ind
R35528:35530 Coq.Init.Datatypes <> nat ind
R35540:35540 Imp aevalR_division :type_scope:x_'||'_x not
R35547:35551 Imp aevalR_division :type_scope:x_'||'_x not
R35541:35544 Imp aevalR_division ANum constr
R35546:35546 Imp <> n var
R35552:35552 Imp <> n var
R35583:35586 Imp aevalR_division aexp ind
R35598:35600 Coq.Init.Datatypes <> nat ind
R35638:35638 Imp aevalR_division :type_scope:x_'||'_x not
R35650:35655 Imp aevalR_division :type_scope:x_'||'_x not
R35663:35663 Imp aevalR_division :type_scope:x_'||'_x not
R35639:35643 Imp aevalR_division APlus constr
R35648:35649 Imp <> a2 var
R35645:35646 Imp <> a1 var
R35658:35660 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35656:35657 Imp <> n1 var
R35661:35662 Imp <> n2 var
R35627:35630 Imp aevalR_division :type_scope:x_'||'_x not
R35625:35626 Imp <> a2 var
R35631:35632 Imp <> n2 var
R35613:35616 Imp aevalR_division :type_scope:x_'||'_x not
R35611:35612 Imp <> a1 var
R35617:35618 Imp <> n1 var
R35695:35698 Imp aevalR_division aexp ind
R35710:35712 Coq.Init.Datatypes <> nat ind
R35750:35750 Imp aevalR_division :type_scope:x_'||'_x not
R35763:35768 Imp aevalR_division :type_scope:x_'||'_x not
R35776:35776 Imp aevalR_division :type_scope:x_'||'_x not
R35751:35756 Imp aevalR_division AMinus constr
R35761:35762 Imp <> a2 var
R35758:35759 Imp <> a1 var
R35771:35773 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R35769:35770 Imp <> n1 var
R35774:35775 Imp <> n2 var
R35739:35742 Imp aevalR_division :type_scope:x_'||'_x not
R35737:35738 Imp <> a2 var
R35743:35744 Imp <> n2 var
R35725:35728 Imp aevalR_division :type_scope:x_'||'_x not
R35723:35724 Imp <> a1 var
R35729:35730 Imp <> n1 var
R35808:35811 Imp aevalR_division aexp ind
R35823:35825 Coq.Init.Datatypes <> nat ind
R35863:35863 Imp aevalR_division :type_scope:x_'||'_x not
R35875:35880 Imp aevalR_division :type_scope:x_'||'_x not
R35888:35888 Imp aevalR_division :type_scope:x_'||'_x not
R35864:35868 Imp aevalR_division AMult constr
R35873:35874 Imp <> a2 var
R35870:35871 Imp <> a1 var
R35883:35885 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R35881:35882 Imp <> n1 var
R35886:35887 Imp <> n2 var
R35852:35855 Imp aevalR_division :type_scope:x_'||'_x not
R35850:35851 Imp <> a2 var
R35856:35857 Imp <> n2 var
R35838:35841 Imp aevalR_division :type_scope:x_'||'_x not
R35836:35837 Imp <> a1 var
R35842:35843 Imp <> n1 var
R35919:35922 Imp aevalR_division aexp ind
R35936:35938 Coq.Init.Datatypes <> nat ind
R35997:35997 Imp aevalR_division :type_scope:x_'||'_x not
R36008:36012 Imp aevalR_division :type_scope:x_'||'_x not
R35998:36001 Imp aevalR_division ADiv constr
R36006:36007 Imp <> a2 var
R36003:36004 Imp <> a1 var
R36013:36014 Imp <> n3 var
R35987:35989 Coq.Init.Logic <> :type_scope:x_'='_x not
R35977:35980 Coq.Init.Peano <> mult def
R35985:35986 Imp <> n3 var
R35982:35983 Imp <> n2 var
R35990:35991 Imp <> n1 var
R35965:35968 Imp aevalR_division :type_scope:x_'||'_x not
R35963:35964 Imp <> a2 var
R35969:35970 Imp <> n2 var
R35951:35954 Imp aevalR_division :type_scope:x_'||'_x not
R35949:35950 Imp <> a1 var
R35955:35956 Imp <> n1 var
R36038:36043 Imp aevalR_division aevalR ind
not 36023 aevalR_division :type_scope:x_'||'_x
R36069:36083 Imp <> <> mod
mod 36093:36107 <> aevalR_extended
ind 36121:36124 aevalR_extended aexp
constr 36140:36143 aevalR_extended AAny
constr 36190:36193 aevalR_extended ANum
constr 36213:36217 aevalR_extended APlus
constr 36246:36251 aevalR_extended AMinus
constr 36280:36284 aevalR_extended AMult
R36148:36151 Imp <> aexp ind
R36204:36207 Imp <> aexp ind
R36197:36199 Coq.Init.Datatypes <> nat ind
R36237:36240 Imp <> aexp ind
R36229:36232 Imp <> aexp ind
R36221:36224 Imp <> aexp ind
R36271:36274 Imp <> aexp ind
R36263:36266 Imp <> aexp ind
R36255:36258 Imp <> aexp ind
R36304:36307 Imp <> aexp ind
R36296:36299 Imp <> aexp ind
R36288:36291 Imp <> aexp ind
ind 36500:36505 aevalR_extended aevalR
constr 36536:36540 aevalR_extended E_Any
constr 36611:36616 aevalR_extended E_ANum
constr 36660:36666 aevalR_extended E_APlus
constr 36771:36778 aevalR_extended E_AMinus
constr 36884:36890 aevalR_extended E_AMult
R36517:36519 Coq.Init.Datatypes <> nat ind
R36509:36512 Imp aevalR_extended aexp ind
R37014:37019 Imp <> aevalR ind
R36554:36556 Coq.Init.Datatypes <> nat ind
R36570:36573 Imp aevalR_extended :type_scope:x_'||'_x not
R36566:36569 Imp aevalR_extended AAny constr
R36574:36574 Imp <> n var
R36630:36632 Coq.Init.Datatypes <> nat ind
R36642:36642 Imp aevalR_extended :type_scope:x_'||'_x not
R36649:36653 Imp aevalR_extended :type_scope:x_'||'_x not
R36643:36646 Imp aevalR_extended ANum constr
R36648:36648 Imp <> n var
R36654:36654 Imp <> n var
R36685:36688 Imp aevalR_extended aexp ind
R36700:36702 Coq.Init.Datatypes <> nat ind
R36740:36740 Imp aevalR_extended :type_scope:x_'||'_x not
R36752:36757 Imp aevalR_extended :type_scope:x_'||'_x not
R36765:36765 Imp aevalR_extended :type_scope:x_'||'_x not
R36741:36745 Imp aevalR_extended APlus constr
R36750:36751 Imp <> a2 var
R36747:36748 Imp <> a1 var
R36760:36762 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36758:36759 Imp <> n1 var
R36763:36764 Imp <> n2 var
R36729:36732 Imp aevalR_extended :type_scope:x_'||'_x not
R36727:36728 Imp <> a2 var
R36733:36734 Imp <> n2 var
R36715:36718 Imp aevalR_extended :type_scope:x_'||'_x not
R36713:36714 Imp <> a1 var
R36719:36720 Imp <> n1 var
R36797:36800 Imp aevalR_extended aexp ind
R36812:36814 Coq.Init.Datatypes <> nat ind
R36852:36852 Imp aevalR_extended :type_scope:x_'||'_x not
R36865:36870 Imp aevalR_extended :type_scope:x_'||'_x not
R36878:36878 Imp aevalR_extended :type_scope:x_'||'_x not
R36853:36858 Imp aevalR_extended AMinus constr
R36863:36864 Imp <> a2 var
R36860:36861 Imp <> a1 var
R36873:36875 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36871:36872 Imp <> n1 var
R36876:36877 Imp <> n2 var
R36841:36844 Imp aevalR_extended :type_scope:x_'||'_x not
R36839:36840 Imp <> a2 var
R36845:36846 Imp <> n2 var
R36827:36830 Imp aevalR_extended :type_scope:x_'||'_x not
R36825:36826 Imp <> a1 var
R36831:36832 Imp <> n1 var
R36910:36913 Imp aevalR_extended aexp ind
R36925:36927 Coq.Init.Datatypes <> nat ind
R36965:36965 Imp aevalR_extended :type_scope:x_'||'_x not
R36977:36982 Imp aevalR_extended :type_scope:x_'||'_x not
R36990:36990 Imp aevalR_extended :type_scope:x_'||'_x not
R36966:36970 Imp aevalR_extended AMult constr
R36975:36976 Imp <> a2 var
R36972:36973 Imp <> a1 var
R36985:36987 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36983:36984 Imp <> n1 var
R36988:36989 Imp <> n2 var
R36954:36957 Imp aevalR_extended :type_scope:x_'||'_x not
R36952:36953 Imp <> a2 var
R36958:36959 Imp <> n2 var
R36940:36943 Imp aevalR_extended :type_scope:x_'||'_x not
R36938:36939 Imp <> a1 var
R36944:36945 Imp <> n1 var
R37014:37019 Imp aevalR_extended aevalR ind
not 36999 aevalR_extended :type_scope:x_'||'_x
R37045:37059 Imp <> <> mod
mod 37891:37892 <> Id
ind 38081:38082 Id id
constr 38096:38097 Id Id
R38108:38109 Imp <> id ind
R38101:38103 Coq.Init.Datatypes <> nat ind
prf 38121:38129 Id eq_id_dec
R38150:38151 Imp Id id ind
R38154:38154 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R38164:38168 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R38179:38179 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R38158:38160 Coq.Init.Logic <> :type_scope:x_'='_x not
R38155:38157 Imp <> id1 var
R38161:38163 Imp <> id2 var
R38172:38175 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38169:38171 Imp <> id1 var
R38176:38178 Imp <> id2 var
R38268:38277 Coq.Arith.Peano_dec <> eq_nat_dec thm
R38268:38277 Coq.Arith.Peano_dec <> eq_nat_dec thm
prf 38550:38554 Id eq_id
R38581:38581 Imp <> T var
R38600:38600 Coq.Init.Logic <> :type_scope:x_'='_x not
R38631:38634 Coq.Init.Logic <> :type_scope:x_'='_x not
R38604:38612 Imp Id eq_id_dec thm
R38616:38616 Imp <> x var
R38614:38614 Imp <> x var
R38630:38630 Imp <> q var
R38623:38623 Imp <> p var
R38635:38635 Imp <> p var
R38669:38677 Imp Id eq_id_dec thm
R38669:38677 Imp Id eq_id_dec thm
R38761:38778 SfLib <> ex_falso_quodlibet thm
R38761:38778 SfLib <> ex_falso_quodlibet thm
prf 38863:38868 Id neq_id
R38897:38897 Imp <> T var
R38927:38927 Coq.Init.Logic <> :type_scope:x_'='_x not
R38958:38961 Coq.Init.Logic <> :type_scope:x_'='_x not
R38931:38939 Imp Id eq_id_dec thm
R38943:38943 Imp <> y var
R38941:38941 Imp <> x var
R38957:38957 Imp <> q var
R38950:38950 Imp <> p var
R38962:38962 Imp <> q var
R38902:38905 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R38901:38901 Imp <> x var
R38906:38906 Imp <> y var
R38995:39003 Imp Id eq_id_dec thm
R38995:39003 Imp Id eq_id_dec thm
R39021:39038 SfLib <> ex_falso_quodlibet thm
R39021:39038 SfLib <> ex_falso_quodlibet thm
R39048:39050 Coq.Init.Logic <> not def
R39109:39110 Imp <> <> mod
def 39526:39530 <> state
R39541:39543 Coq.Init.Datatypes <> nat ind
R39535:39536 SfLib <> id ind
def 39558:39568 <> empty_state
R39572:39576 Imp <> state def
def 39607:39612 <> update
R39620:39624 Imp <> state def
R39632:39633 SfLib <> id ind
R39641:39643 Coq.Init.Datatypes <> nat ind
R39648:39652 Imp <> state def
R39672:39680 SfLib <> eq_id_dec thm
R39684:39685 Imp <> x' var
R39682:39682 Imp <> x var
R39699:39700 Imp <> st var
R39702:39703 Imp <> x' var
R39692:39692 Imp <> n var
prf 39847:39855 <> update_eq
R39893:39895 Coq.Init.Logic <> :type_scope:x_'='_x not
R39877:39882 Imp <> update def
R39889:39889 Imp <> n var
R39887:39887 Imp <> x var
R39884:39885 Imp <> st var
R39892:39892 Imp <> x var
R39896:39896 Imp <> n var
R39925:39930 Imp <> update def
R39939:39943 SfLib <> eq_id thm
R39939:39943 SfLib <> eq_id thm
prf 40002:40011 <> update_neq
R40093:40096 Coq.Init.Logic <> :type_scope:x_'='_x not
R40102:40102 Coq.Init.Logic <> :type_scope:x_'='_x not
R40075:40080 Imp <> update def
R40088:40088 Imp <> n var
R40085:40086 Imp <> x2 var
R40082:40083 Imp <> st var
R40091:40092 Imp <> x1 var
R40097:40098 Imp <> st var
R40100:40101 Imp <> x1 var
R40038:40041 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40036:40037 Imp <> x2 var
R40042:40043 Imp <> x1 var
R40131:40136 Imp <> update def
R40145:40150 SfLib <> neq_id prfax
R40145:40150 SfLib <> neq_id prfax
prf 40333:40346 <> update_example
R40360:40362 Coq.Init.Datatypes <> nat ind
R40404:40406 Coq.Init.Logic <> :type_scope:x_'='_x not
R40369:40374 Imp <> update def
R40395:40395 Imp <> n var
R40389:40390 SfLib <> Id constr
R40376:40386 Imp <> empty_state def
R40399:40400 SfLib <> Id constr
R40437:40442 Imp <> update def
R40451:40456 SfLib <> neq_id prfax
R40451:40456 SfLib <> neq_id prfax
R40466:40468 Coq.Init.Logic <> not def
prf 40552:40564 <> update_shadow
R40593:40597 Imp <> state def
R40640:40642 Coq.Init.Logic <> :type_scope:x_'='_x not
R40605:40610 Imp <> update def
R40634:40635 Imp <> n2 var
R40631:40632 Imp <> x2 var
R40614:40619 Imp <> update def
R40627:40628 Imp <> n1 var
R40624:40625 Imp <> x2 var
R40621:40622 Imp <> st var
R40638:40639 Imp <> x1 var
R40644:40649 Imp <> update def
R40657:40658 Imp <> n2 var
R40654:40655 Imp <> x2 var
R40651:40652 Imp <> st var
R40661:40662 Imp <> x1 var
R40692:40697 Imp <> update def
R40710:40718 SfLib <> eq_id_dec thm
R40710:40718 SfLib <> eq_id_dec thm
prf 40824:40834 <> update_same
R40860:40864 Imp <> state def
R40906:40908 Coq.Init.Logic <> :type_scope:x_'='_x not
R40887:40892 Imp <> update def
R40900:40901 Imp <> n1 var
R40897:40898 Imp <> x1 var
R40894:40895 Imp <> st var
R40904:40905 Imp <> x2 var
R40909:40910 Imp <> st var
R40912:40913 Imp <> x2 var
R40875:40877 Coq.Init.Logic <> :type_scope:x_'='_x not
R40870:40871 Imp <> st var
R40873:40874 Imp <> x1 var
R40878:40879 Imp <> n1 var
R40943:40948 Imp <> update def
R40961:40969 SfLib <> eq_id_dec thm
R40961:40969 SfLib <> eq_id_dec thm
prf 41095:41108 <> update_permute
R41190:41192 Coq.Init.Logic <> :type_scope:x_'='_x not
R41156:41161 Imp <> update def
R41184:41185 Imp <> n2 var
R41181:41182 Imp <> x1 var
R41164:41169 Imp <> update def
R41177:41178 Imp <> n1 var
R41174:41175 Imp <> x2 var
R41171:41172 Imp <> st var
R41188:41189 Imp <> x3 var
R41194:41199 Imp <> update def
R41222:41223 Imp <> n1 var
R41219:41220 Imp <> x2 var
R41202:41207 Imp <> update def
R41215:41216 Imp <> n2 var
R41212:41213 Imp <> x1 var
R41209:41210 Imp <> st var
R41226:41227 Imp <> x3 var
R41142:41145 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41140:41141 Imp <> x2 var
R41146:41147 Imp <> x1 var
R41257:41262 Imp <> update def
R41275:41283 SfLib <> eq_id_dec thm
R41275:41283 SfLib <> eq_id_dec thm
R41307:41315 SfLib <> eq_id_dec thm
R41307:41315 SfLib <> eq_id_dec thm
R41343:41345 Coq.Init.Logic <> not def
R41359:41376 SfLib <> ex_falso_quodlibet thm
R41359:41376 SfLib <> ex_falso_quodlibet thm
ind 41655:41658 <> aexp
constr 41674:41677 <> ANum
constr 41697:41699 <> AId
constr 41750:41754 <> APlus
constr 41783:41788 <> AMinus
constr 41817:41821 <> AMult
R41688:41691 Imp <> aexp ind
R41681:41683 Coq.Init.Datatypes <> nat ind
R41709:41712 Imp <> aexp ind
R41703:41704 SfLib <> id ind
R41774:41777 Imp <> aexp ind
R41766:41769 Imp <> aexp ind
R41758:41761 Imp <> aexp ind
R41808:41811 Imp <> aexp ind
R41800:41803 Imp <> aexp ind
R41792:41795 Imp <> aexp ind
R41841:41844 Imp <> aexp ind
R41833:41836 Imp <> aexp ind
R41825:41828 Imp <> aexp ind
def 42136:42136 <> X
R42140:42141 SfLib <> id ind
R42146:42147 SfLib <> Id constr
def 42163:42163 <> Y
R42167:42168 SfLib <> id ind
R42173:42174 SfLib <> Id constr
def 42190:42190 <> Z
R42194:42195 SfLib <> id ind
R42200:42201 SfLib <> Id constr
ind 42569:42572 <> bexp
constr 42588:42592 <> BTrue
constr 42605:42610 <> BFalse
constr 42623:42625 <> BEq
constr 42654:42656 <> BLe
constr 42685:42688 <> BNot
constr 42709:42712 <> BAnd
R42596:42599 Imp <> bexp ind
R42614:42617 Imp <> bexp ind
R42645:42648 Imp <> bexp ind
R42637:42640 Imp <> aexp ind
R42629:42632 Imp <> aexp ind
R42676:42679 Imp <> bexp ind
R42668:42671 Imp <> aexp ind
R42660:42663 Imp <> aexp ind
R42700:42703 Imp <> bexp ind
R42692:42695 Imp <> bexp ind
R42732:42735 Imp <> bexp ind
R42724:42727 Imp <> bexp ind
R42716:42719 Imp <> bexp ind
def 43123:43127 <> aeval
R43135:43139 Imp <> state def
R43147:43150 Imp <> aexp ind
R43155:43157 Coq.Init.Datatypes <> nat ind
R43170:43170 Imp <> a var
R43181:43184 Imp <> ANum constr
R43197:43199 Imp <> AId constr
R43206:43207 Imp <> st var
R43271:43275 Imp <> APlus constr
R43286:43286 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43298:43302 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43314:43314 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43287:43291 Imp <> aeval def
R43293:43294 Imp <> st var
R43303:43307 Imp <> aeval def
R43309:43310 Imp <> st var
R43320:43325 Imp <> AMinus constr
R43337:43337 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43349:43353 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43365:43365 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43338:43342 Imp <> aeval def
R43344:43345 Imp <> st var
R43354:43358 Imp <> aeval def
R43360:43361 Imp <> st var
R43371:43375 Imp <> AMult constr
R43386:43386 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R43398:43402 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R43414:43414 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R43387:43391 Imp <> aeval def
R43393:43394 Imp <> st var
R43403:43407 Imp <> aeval def
R43409:43410 Imp <> st var
def 43433:43437 <> beval
R43445:43449 Imp <> state def
R43457:43460 Imp <> bexp ind
R43465:43468 Coq.Init.Datatypes <> bool ind
R43481:43481 Imp <> b var
R43492:43496 Imp <> BTrue constr
R43507:43510 Coq.Init.Datatypes <> true constr
R43516:43521 Imp <> BFalse constr
R43531:43535 Coq.Init.Datatypes <> false constr
R43541:43543 Imp <> BEq constr
R43556:43562 Coq.Arith.EqNat <> beq_nat def
R43579:43583 Imp <> aeval def
R43585:43586 Imp <> st var
R43565:43569 Imp <> aeval def
R43571:43572 Imp <> st var
R43596:43598 Imp <> BLe constr
R43611:43617 SfLib <> ble_nat def
R43634:43638 Imp <> aeval def
R43640:43641 Imp <> st var
R43620:43624 Imp <> aeval def
R43626:43627 Imp <> st var
R43651:43654 Imp <> BNot constr
R43666:43669 Coq.Init.Datatypes <> negb def
R43672:43676 Imp <> beval def
R43678:43679 Imp <> st var
R43689:43692 Imp <> BAnd constr
R43704:43707 Coq.Init.Datatypes <> andb def
R43724:43728 Imp <> beval def
R43730:43731 Imp <> st var
R43710:43714 Imp <> beval def
R43716:43717 Imp <> st var
def 43753:43757 <> aexp1
R43843:43847 Coq.Init.Logic <> :type_scope:x_'='_x not
R43763:43767 Imp <> aeval def
R43803:43807 Imp <> APlus constr
R43819:43823 Imp <> AMult constr
R43834:43837 Imp <> ANum constr
R43826:43828 Imp <> AId constr
R43830:43830 Imp <> X def
R43810:43813 Imp <> ANum constr
R43770:43775 Imp <> update def
R43789:43789 Imp <> X def
R43777:43787 Imp <> empty_state def
def 43886:43890 <> bexp1
R43977:43981 Coq.Init.Logic <> :type_scope:x_'='_x not
R43896:43900 Imp <> beval def
R43936:43939 Imp <> BAnd constr
R43948:43951 Imp <> BNot constr
R43954:43956 Imp <> BLe constr
R43967:43970 Imp <> ANum constr
R43959:43961 Imp <> AId constr
R43963:43963 Imp <> X def
R43941:43945 Imp <> BTrue constr
R43903:43908 Imp <> update def
R43922:43922 Imp <> X def
R43910:43920 Imp <> empty_state def
R43982:43985 Coq.Init.Datatypes <> true constr
ind 44814:44816 <> com
constr 44832:44836 <> CSkip
constr 44848:44851 <> CAss
constr 44877:44880 <> CSeq
constr 44906:44908 <> CIf
constr 44942:44947 <> CWhile
R44840:44842 Imp <> com ind
R44869:44871 Imp <> com ind
R44861:44864 Imp <> aexp ind
R44855:44856 SfLib <> id ind
R44898:44900 Imp <> com ind
R44891:44893 Imp <> com ind
R44884:44886 Imp <> com ind
R44934:44936 Imp <> com ind
R44927:44929 Imp <> com ind
R44920:44922 Imp <> com ind
R44912:44915 Imp <> bexp ind
R44966:44968 Imp <> com ind
R44959:44961 Imp <> com ind
R44951:44954 Imp <> bexp ind
R45619:45623 Imp <> CSkip constr
not 45605 <> ::'SKIP'
R45653:45656 Imp <> CAss constr
not 45635 <> ::x_'::='_x
R45704:45707 Imp <> CSeq constr
not 45687 <> ::x_';;'_x
R45792:45797 Imp <> CWhile constr
not 45761 <> ::'WHILE'_x_'DO'_x_'END'
R45891:45893 Imp <> CIf constr
not 45849 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 46055:46065 <> fact_in_coq
R46069:46071 Imp <> com ind
R46089:46093 Imp <> ::x_';;'_x not
R46079:46083 Imp <> ::x_'::='_x not
R46078:46078 Imp <> Z def
R46084:46086 Imp <> AId constr
R46088:46088 Imp <> X def
R46106:46110 Imp <> ::x_';;'_x not
R46095:46099 Imp <> ::x_'::='_x not
R46094:46094 Imp <> Y def
R46100:46103 Imp <> ANum constr
R46111:46116 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46144:46151 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46215:46220 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46117:46120 Imp <> BNot constr
R46123:46125 Imp <> BEq constr
R46136:46139 Imp <> ANum constr
R46128:46130 Imp <> AId constr
R46132:46132 Imp <> Z def
R46179:46185 Imp <> ::x_';;'_x not
R46153:46157 Imp <> ::x_'::='_x not
R46152:46152 Imp <> Y def
R46158:46162 Imp <> AMult constr
R46173:46175 Imp <> AId constr
R46177:46177 Imp <> Z def
R46165:46167 Imp <> AId constr
R46169:46169 Imp <> Y def
R46187:46191 Imp <> ::x_'::='_x not
R46186:46186 Imp <> Z def
R46192:46197 Imp <> AMinus constr
R46208:46211 Imp <> ANum constr
R46200:46202 Imp <> AId constr
R46204:46204 Imp <> Z def
def 46337:46341 <> plus2
R46345:46347 Imp <> com ind
R46355:46360 Imp <> ::x_'::='_x not
R46383:46383 Imp <> ::x_'::='_x not
R46354:46354 Imp <> X def
R46361:46365 Imp <> APlus constr
R46376:46379 Imp <> ANum constr
R46368:46370 Imp <> AId constr
R46372:46372 Imp <> X def
def 46398:46407 <> XtimesYinZ
R46411:46413 Imp <> com ind
R46421:46426 Imp <> ::x_'::='_x not
R46448:46448 Imp <> ::x_'::='_x not
R46420:46420 Imp <> Z def
R46427:46431 Imp <> AMult constr
R46442:46444 Imp <> AId constr
R46446:46446 Imp <> Y def
R46434:46436 Imp <> AId constr
R46438:46438 Imp <> X def
def 46463:46482 <> subtract_slowly_body
R46486:46488 Imp <> com ind
R46524:46529 Imp <> ::x_';;'_x not
R46496:46500 Imp <> ::x_'::='_x not
R46495:46495 Imp <> Z def
R46501:46506 Imp <> AMinus constr
R46517:46520 Imp <> ANum constr
R46509:46511 Imp <> AId constr
R46513:46513 Imp <> Z def
R46531:46535 Imp <> ::x_'::='_x not
R46530:46530 Imp <> X def
R46536:46541 Imp <> AMinus constr
R46552:46555 Imp <> ANum constr
R46544:46546 Imp <> AId constr
R46548:46548 Imp <> X def
def 46588:46602 <> subtract_slowly
R46606:46608 Imp <> com ind
R46615:46620 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46648:46655 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46676:46681 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46621:46624 Imp <> BNot constr
R46627:46629 Imp <> BEq constr
R46640:46643 Imp <> ANum constr
R46632:46634 Imp <> AId constr
R46636:46636 Imp <> X def
R46656:46675 Imp <> subtract_slowly_body def
def 46696:46719 <> subtract_3_from_5_slowly
R46723:46725 Imp <> com ind
R46744:46749 Imp <> ::x_';;'_x not
R46733:46737 Imp <> ::x_'::='_x not
R46732:46732 Imp <> X def
R46738:46741 Imp <> ANum constr
R46762:46767 Imp <> ::x_';;'_x not
R46751:46755 Imp <> ::x_'::='_x not
R46750:46750 Imp <> Z def
R46756:46759 Imp <> ANum constr
R46768:46782 Imp <> subtract_slowly def
def 46823:46826 <> loop
R46830:46832 Imp <> com ind
R46839:46844 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46850:46857 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46862:46867 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46845:46849 Imp <> BTrue constr
R46858:46861 Imp <> ::'SKIP' not
def 47359:47376 <> ceval_fun_no_while
R47384:47388 Imp <> state def
R47396:47398 Imp <> com ind
R47403:47407 Imp <> state def
R47420:47420 Imp <> c var
R47433:47436 Imp <> ::'SKIP' not
R47449:47450 Imp <> st var
R47459:47463 Imp <> ::x_'::='_x not
R47478:47483 Imp <> update def
R47491:47495 Imp <> aeval def
R47497:47498 Imp <> st var
R47485:47486 Imp <> st var
R47512:47515 Imp <> ::x_';;'_x not
R47541:47558 Imp <> ceval_fun_no_while def
R47560:47561 Imp <> st var
R47577:47594 Imp <> ceval_fun_no_while def
R47596:47598 Imp <> st' var
R47609:47612 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47614:47619 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47622:47627 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47630:47632 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47649:47653 Imp <> beval def
R47655:47656 Imp <> st var
R47716:47733 Imp <> ceval_fun_no_while def
R47735:47736 Imp <> st var
R47676:47693 Imp <> ceval_fun_no_while def
R47695:47696 Imp <> st var
R47747:47752 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R47754:47757 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R47759:47762 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R47775:47776 Imp <> st var
ind 51730:51734 <> ceval
constr 51775:51780 <> E_Skip
constr 51821:51825 <> E_Ass
constr 51918:51922 <> E_Seq
constr 52037:52044 <> E_IfTrue
constr 52171:52179 <> E_IfFalse
constr 52307:52316 <> E_WhileEnd
constr 52403:52413 <> E_WhileLoop
R51754:51758 Imp <> state def
R51745:51749 Imp <> state def
R51738:51740 Imp <> com ind
R52605:52609 Imp <> ceval ind
R51805:51807 Imp <> ::x_'/'_x_'||'_x not
R51810:51813 Imp <> ::x_'/'_x_'||'_x not
R51801:51804 Imp <> ::'SKIP' not
R51808:51809 Imp <> st var
R51814:51815 Imp <> st var
R51879:51879 Imp <> ::x_'/'_x_'||'_x not
R51888:51891 Imp <> ::x_'/'_x_'||'_x not
R51894:51898 Imp <> ::x_'/'_x_'||'_x not
R51912:51912 Imp <> ::x_'/'_x_'||'_x not
R51881:51885 Imp <> ::x_'::='_x not
R51880:51880 Imp <> x var
R51886:51887 Imp <> a1 var
R51892:51893 Imp <> st var
R51899:51904 Imp <> update def
R51911:51911 Imp <> n var
R51909:51909 Imp <> x var
R51906:51907 Imp <> st var
R51865:51867 Coq.Init.Logic <> :type_scope:x_'='_x not
R51854:51858 Imp <> aeval def
R51863:51864 Imp <> a1 var
R51860:51861 Imp <> st var
R51868:51868 Imp <> n var
R52009:52009 Imp <> ::x_'/'_x_'||'_x not
R52018:52021 Imp <> ::x_'/'_x_'||'_x not
R52024:52027 Imp <> ::x_'/'_x_'||'_x not
R52012:52015 Imp <> ::x_';;'_x not
R52010:52011 Imp <> c1 var
R52016:52017 Imp <> c2 var
R52022:52023 Imp <> st var
R52028:52031 Imp <> st'' var
R51985:51987 Imp <> ::x_'/'_x_'||'_x not
R51991:51994 Imp <> ::x_'/'_x_'||'_x not
R51983:51984 Imp <> c2 var
R51988:51990 Imp <> st' var
R51995:51998 Imp <> st'' var
R51960:51962 Imp <> ::x_'/'_x_'||'_x not
R51965:51969 Imp <> ::x_'/'_x_'||'_x not
R51958:51959 Imp <> c1 var
R51963:51964 Imp <> st var
R51970:51972 Imp <> st' var
R52128:52128 Imp <> ::x_'/'_x_'||'_x not
R52153:52156 Imp <> ::x_'/'_x_'||'_x not
R52159:52162 Imp <> ::x_'/'_x_'||'_x not
R52129:52132 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52134:52139 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52142:52147 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52150:52152 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52133:52133 Imp <> b var
R52140:52141 Imp <> c1 var
R52148:52149 Imp <> c2 var
R52157:52158 Imp <> st var
R52163:52165 Imp <> st' var
R52106:52108 Imp <> ::x_'/'_x_'||'_x not
R52111:52114 Imp <> ::x_'/'_x_'||'_x not
R52104:52105 Imp <> c1 var
R52109:52110 Imp <> st var
R52115:52117 Imp <> st' var
R52087:52089 Coq.Init.Logic <> :type_scope:x_'='_x not
R52077:52081 Imp <> beval def
R52086:52086 Imp <> b var
R52083:52084 Imp <> st var
R52090:52093 Coq.Init.Datatypes <> true constr
R52264:52264 Imp <> ::x_'/'_x_'||'_x not
R52289:52292 Imp <> ::x_'/'_x_'||'_x not
R52295:52298 Imp <> ::x_'/'_x_'||'_x not
R52265:52268 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52270:52275 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52278:52283 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52286:52288 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52269:52269 Imp <> b var
R52276:52277 Imp <> c1 var
R52284:52285 Imp <> c2 var
R52293:52294 Imp <> st var
R52299:52301 Imp <> st' var
R52242:52244 Imp <> ::x_'/'_x_'||'_x not
R52247:52250 Imp <> ::x_'/'_x_'||'_x not
R52240:52241 Imp <> c2 var
R52245:52246 Imp <> st var
R52251:52253 Imp <> st' var
R52222:52224 Coq.Init.Logic <> :type_scope:x_'='_x not
R52212:52216 Imp <> beval def
R52221:52221 Imp <> b var
R52218:52219 Imp <> st var
R52225:52229 Coq.Init.Datatypes <> false constr
R52369:52369 Imp <> ::x_'/'_x_'||'_x not
R52386:52389 Imp <> ::x_'/'_x_'||'_x not
R52392:52395 Imp <> ::x_'/'_x_'||'_x not
R52370:52375 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52377:52380 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52382:52385 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52376:52376 Imp <> b var
R52381:52381 Imp <> c var
R52390:52391 Imp <> st var
R52396:52397 Imp <> st var
R52351:52353 Coq.Init.Logic <> :type_scope:x_'='_x not
R52341:52345 Imp <> beval def
R52350:52350 Imp <> b var
R52347:52348 Imp <> st var
R52354:52358 Coq.Init.Datatypes <> false constr
R52539:52539 Imp <> ::x_'/'_x_'||'_x not
R52556:52559 Imp <> ::x_'/'_x_'||'_x not
R52562:52565 Imp <> ::x_'/'_x_'||'_x not
R52540:52545 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52547:52550 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52552:52555 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52546:52546 Imp <> b var
R52551:52551 Imp <> c var
R52560:52561 Imp <> st var
R52566:52569 Imp <> st'' var
R52497:52497 Imp <> ::x_'/'_x_'||'_x not
R52514:52517 Imp <> ::x_'/'_x_'||'_x not
R52521:52524 Imp <> ::x_'/'_x_'||'_x not
R52498:52503 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52505:52508 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52510:52513 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52504:52504 Imp <> b var
R52509:52509 Imp <> c var
R52518:52520 Imp <> st' var
R52525:52528 Imp <> st'' var
R52475:52477 Imp <> ::x_'/'_x_'||'_x not
R52480:52483 Imp <> ::x_'/'_x_'||'_x not
R52474:52474 Imp <> c var
R52478:52479 Imp <> st var
R52484:52486 Imp <> st' var
R52457:52459 Coq.Init.Logic <> :type_scope:x_'='_x not
R52447:52451 Imp <> beval def
R52456:52456 Imp <> b var
R52453:52454 Imp <> st var
R52460:52463 Coq.Init.Datatypes <> true constr
R52605:52609 Imp <> ceval ind
not 52580 <> ::x_'/'_x_'||'_x
def 53120:53133 <> ceval_example1
R53140:53140 Imp <> ::x_'/'_x_'||'_x not
R53243:53249 Imp <> ::x_'/'_x_'||'_x not
R53261:53268 Imp <> ::x_'/'_x_'||'_x not
R53304:53304 Imp <> ::x_'/'_x_'||'_x not
R53153:53160 Imp <> ::x_';;'_x not
R53142:53146 Imp <> ::x_'::='_x not
R53141:53141 Imp <> X def
R53147:53150 Imp <> ANum constr
R53161:53164 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53185:53197 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53210:53222 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53235:53242 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53165:53167 Imp <> BLe constr
R53178:53181 Imp <> ANum constr
R53170:53172 Imp <> AId constr
R53174:53174 Imp <> X def
R53199:53203 Imp <> ::x_'::='_x not
R53198:53198 Imp <> Y def
R53204:53207 Imp <> ANum constr
R53224:53228 Imp <> ::x_'::='_x not
R53223:53223 Imp <> Z def
R53229:53232 Imp <> ANum constr
R53250:53260 Imp <> empty_state def
R53269:53274 Imp <> update def
R53301:53301 Imp <> Z def
R53277:53282 Imp <> update def
R53296:53296 Imp <> X def
R53284:53294 Imp <> empty_state def
R53380:53385 Imp <> update def
R53399:53399 Imp <> X def
R53387:53397 Imp <> empty_state def
R53368:53372 Imp <> E_Seq constr
R53380:53385 Imp <> update def
R53399:53399 Imp <> X def
R53387:53397 Imp <> empty_state def
R53368:53372 Imp <> E_Seq constr
R53444:53448 Imp <> E_Ass constr
R53444:53448 Imp <> E_Ass constr
R53495:53503 Imp <> E_IfFalse constr
R53495:53503 Imp <> E_IfFalse constr
R53537:53541 Imp <> E_Ass constr
R53537:53541 Imp <> E_Ass constr
def 53619:53632 <> ceval_example2
R53639:53639 Imp <> ::x_'/'_x_'||'_x not
R53682:53685 Imp <> ::x_'/'_x_'||'_x not
R53697:53705 Imp <> ::x_'/'_x_'||'_x not
R53754:53754 Imp <> ::x_'/'_x_'||'_x not
R53652:53654 Imp <> ::x_';;'_x not
R53641:53645 Imp <> ::x_'::='_x not
R53640:53640 Imp <> X def
R53646:53649 Imp <> ANum constr
R53667:53669 Imp <> ::x_';;'_x not
R53656:53660 Imp <> ::x_'::='_x not
R53655:53655 Imp <> Y def
R53661:53664 Imp <> ANum constr
R53671:53675 Imp <> ::x_'::='_x not
R53670:53670 Imp <> Z def
R53676:53679 Imp <> ANum constr
R53686:53696 Imp <> empty_state def
R53706:53711 Imp <> update def
R53751:53751 Imp <> Z def
R53714:53719 Imp <> update def
R53746:53746 Imp <> Y def
R53722:53727 Imp <> update def
R53741:53741 Imp <> X def
R53729:53739 Imp <> empty_state def
R53784:53789 Imp <> update def
R53803:53803 Imp <> X def
R53791:53801 Imp <> empty_state def
R53772:53776 Imp <> E_Seq constr
R53784:53789 Imp <> update def
R53803:53803 Imp <> X def
R53791:53801 Imp <> empty_state def
R53772:53776 Imp <> E_Seq constr
R53819:53823 Imp <> E_Ass constr
R53819:53823 Imp <> E_Ass constr
R53862:53867 Imp <> update def
R53894:53894 Imp <> Y def
R53870:53875 Imp <> update def
R53889:53889 Imp <> X def
R53877:53887 Imp <> empty_state def
R53850:53854 Imp <> E_Seq constr
R53862:53867 Imp <> update def
R53894:53894 Imp <> Y def
R53870:53875 Imp <> update def
R53889:53889 Imp <> X def
R53877:53887 Imp <> empty_state def
R53850:53854 Imp <> E_Seq constr
R53910:53914 Imp <> E_Ass constr
R53910:53914 Imp <> E_Ass constr
R53942:53946 Imp <> E_Ass constr
R53942:53946 Imp <> E_Ass constr
def 54298:54305 <> pup_to_n
R54309:54311 Imp <> com ind
R54331:54336 Imp <> ::x_';;'_x not
R54320:54324 Imp <> ::x_'::='_x not
R54319:54319 Imp <> Y def
R54325:54328 Imp <> ANum constr
R54337:54343 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54371:54383 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54448:54455 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54344:54347 Imp <> BNot constr
R54350:54352 Imp <> BLe constr
R54363:54366 Imp <> ANum constr
R54355:54357 Imp <> AId constr
R54359:54359 Imp <> X def
R54411:54418 Imp <> ::x_';;'_x not
R54385:54389 Imp <> ::x_'::='_x not
R54384:54384 Imp <> Y def
R54390:54394 Imp <> APlus constr
R54405:54407 Imp <> AId constr
R54409:54409 Imp <> X def
R54397:54399 Imp <> AId constr
R54401:54401 Imp <> Y def
R54420:54424 Imp <> ::x_'::='_x not
R54419:54419 Imp <> X def
R54425:54430 Imp <> AMinus constr
R54441:54444 Imp <> ANum constr
R54433:54435 Imp <> AId constr
R54437:54437 Imp <> X def
prf 54467:54480 <> pup_to_2_ceval
R54494:54497 Imp <> ::x_'/'_x_'||'_x not
R54520:54528 Imp <> ::x_'/'_x_'||'_x not
R54486:54493 Imp <> pup_to_n def
R54498:54503 Imp <> update def
R54517:54517 Imp <> X def
R54505:54515 Imp <> empty_state def
R54529:54534 Imp <> update def
R54619:54619 Imp <> X def
R54537:54542 Imp <> update def
R54614:54614 Imp <> Y def
R54545:54550 Imp <> update def
R54609:54609 Imp <> X def
R54553:54558 Imp <> update def
R54604:54604 Imp <> Y def
R54561:54566 Imp <> update def
R54599:54599 Imp <> Y def
R54569:54574 Imp <> update def
R54594:54594 Imp <> X def
R54576:54586 Imp <> empty_state def
R54640:54647 Imp <> pup_to_n def
prf 55440:55458 <> ceval_deterministic
R55535:55537 Coq.Init.Logic <> :type_scope:x_'='_x not
R55532:55534 Imp <> st1 var
R55538:55540 Imp <> st2 var
R55511:55513 Imp <> ::x_'/'_x_'||'_x not
R55516:55519 Imp <> ::x_'/'_x_'||'_x not
R55510:55510 Imp <> c var
R55514:55515 Imp <> st var
R55520:55522 Imp <> st2 var
R55488:55490 Imp <> ::x_'/'_x_'||'_x not
R55493:55496 Imp <> ::x_'/'_x_'||'_x not
R55487:55487 Imp <> c var
R55491:55492 Imp <> st var
R55497:55499 Imp <> st1 var
R55779:55781 Coq.Init.Logic <> :type_scope:x_'='_x not
R55779:55781 Coq.Init.Logic <> :type_scope:x_'='_x not
R56568:56570 Coq.Init.Logic <> :type_scope:x_'='_x not
R56568:56570 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 57049:57058 <> plus2_spec
R57123:57125 Coq.Init.Logic <> :type_scope:x_'='_x not
R57118:57120 Imp <> st' var
R57122:57122 Imp <> X def
R57127:57129 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R57126:57126 Imp <> n var
R57100:57102 Imp <> ::x_'/'_x_'||'_x not
R57105:57108 Imp <> ::x_'/'_x_'||'_x not
R57095:57099 Imp <> plus2 def
R57103:57104 Imp <> st var
R57109:57111 Imp <> st' var
R57085:57087 Coq.Init.Logic <> :type_scope:x_'='_x not
R57081:57082 Imp <> st var
R57084:57084 Imp <> X def
R57088:57088 Imp <> n var
R57436:57444 Imp <> update_eq thm
R57436:57444 Imp <> update_eq thm
prf 57585:57587 <> XYZ
R57704:57706 Coq.Init.Logic <> :type_scope:x_'='_x not
R57699:57701 Imp <> st' var
R57703:57703 Imp <> Z def
R57709:57711 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R57707:57708 Imp <> n1 var
R57712:57713 Imp <> n2 var
R57648:57650 Imp <> ::x_'/'_x_'||'_x not
R57653:57656 Imp <> ::x_'/'_x_'||'_x not
R57638:57647 Imp <> XtimesYinZ def
R57651:57652 Imp <> st var
R57657:57659 Imp <> st' var
R57629:57631 Coq.Init.Logic <> :type_scope:x_'='_x not
R57625:57626 Imp <> st var
R57628:57628 Imp <> Y def
R57632:57633 Imp <> n2 var
R57616:57618 Coq.Init.Logic <> :type_scope:x_'='_x not
R57612:57613 Imp <> st var
R57615:57615 Imp <> X def
R57619:57620 Imp <> n1 var
R57771:57776 Imp <> update def
R57790:57794 SfLib <> eq_id thm
R57790:57794 SfLib <> eq_id thm
prf 57875:57890 <> loop_never_stops
R57911:57912 Coq.Init.Logic <> :type_scope:'~'_x not
R57929:57929 Coq.Init.Logic <> :type_scope:'~'_x not
R57917:57919 Imp <> ::x_'/'_x_'||'_x not
R57922:57925 Imp <> ::x_'/'_x_'||'_x not
R57913:57916 Imp <> loop def
R57920:57921 Imp <> st var
R57926:57928 Imp <> st' var
R57970:57973 Imp <> loop def
R57998:58003 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58009:58012 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58017:58020 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58004:58008 Imp <> BTrue constr
R58013:58016 Imp <> ::'SKIP' not
R57998:58003 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58009:58012 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58017:58020 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58004:58008 Imp <> BTrue constr
R58013:58016 Imp <> ::'SKIP' not
def 58509:58517 <> no_whiles
R58524:58526 Imp <> com ind
R58531:58534 Coq.Init.Datatypes <> bool ind
R58547:58547 Imp <> c var
R58558:58561 Imp <> ::'SKIP' not
R58572:58575 Coq.Init.Datatypes <> true constr
R58582:58586 Imp <> ::x_'::='_x not
R58595:58598 Coq.Init.Datatypes <> true constr
R58606:58609 Imp <> ::x_';;'_x not
R58617:58620 Coq.Init.Datatypes <> andb def
R58638:58646 Imp <> no_whiles def
R58623:58631 Imp <> no_whiles def
R58656:58659 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58661:58666 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58669:58674 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58677:58679 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58684:58687 Coq.Init.Datatypes <> andb def
R58705:58713 Imp <> no_whiles def
R58690:58698 Imp <> no_whiles def
R58723:58728 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58730:58733 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58735:58738 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R58744:58748 Coq.Init.Datatypes <> false constr
ind 59079:59088 <> no_whilesR
constr 59108:59120 <> no_while_skip
constr 59143:59154 <> no_while_ass
constr 59194:59205 <> no_while_seq
constr 59283:59294 <> no_whiles_if
R59091:59093 Imp <> com ind
R59124:59133 Imp <> no_whilesR ind
R59135:59139 Imp <> CSkip constr
R59170:59179 Imp <> no_whilesR ind
R59182:59185 Imp <> CAss constr
R59189:59189 Imp <> e var
R59187:59187 Imp <> x var
R59257:59266 Imp <> no_whilesR ind
R59269:59272 Imp <> CSeq constr
R59277:59278 Imp <> c2 var
R59274:59275 Imp <> c1 var
R59240:59249 Imp <> no_whilesR ind
R59251:59252 Imp <> c2 var
R59223:59232 Imp <> no_whilesR ind
R59234:59235 Imp <> c1 var
R59348:59357 Imp <> no_whilesR ind
R59360:59362 Imp <> CIf constr
R59369:59370 Imp <> c2 var
R59366:59367 Imp <> c1 var
R59364:59364 Imp <> b var
R59331:59340 Imp <> no_whilesR ind
R59342:59343 Imp <> c2 var
R59314:59323 Imp <> no_whilesR ind
R59325:59326 Imp <> c1 var
prf 59383:59395 <> no_whiles_eqv
R59429:59433 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R59422:59424 Coq.Init.Logic <> :type_scope:x_'='_x not
R59411:59419 Imp <> no_whiles def
R59421:59421 Imp <> c var
R59425:59428 Coq.Init.Datatypes <> true constr
R59434:59443 Imp <> no_whilesR ind
R59445:59445 Imp <> c var
R59508:59520 Imp <> no_while_skip constr
R59508:59520 Imp <> no_while_skip constr
R59534:59545 Imp <> no_while_ass constr
R59534:59545 Imp <> no_while_ass constr
R59572:59584 Coq.Bool.Bool <> andb_true_iff thm
R59572:59584 Coq.Bool.Bool <> andb_true_iff thm
R59611:59622 Imp <> no_while_seq constr
R59611:59622 Imp <> no_while_seq constr
R59705:59716 Imp <> no_whiles_if constr
R59705:59716 Imp <> no_whiles_if constr
R59753:59764 Coq.Bool.Bool <> andb_true_eq thm
R59753:59764 Coq.Bool.Bool <> andb_true_eq thm
R59832:59843 Coq.Bool.Bool <> andb_true_eq thm
R59832:59843 Coq.Bool.Bool <> andb_true_eq thm
prf 60396:60412 <> NoWhilesTerminate
R60496:60502 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60506:60507 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60509:60511 Imp <> ::x_'/'_x_'||'_x not
R60514:60517 Imp <> ::x_'/'_x_'||'_x not
R60508:60508 Imp <> p var
R60512:60513 Imp <> st var
R60518:60520 Imp <> st' var
R60440:60442 Coq.Init.Logic <> :type_scope:x_'='_x not
R60429:60437 Imp <> no_whiles def
R60439:60439 Imp <> p var
R60443:60446 Coq.Init.Datatypes <> true constr
R60575:60580 Imp <> E_Skip constr
R60575:60580 Imp <> E_Skip constr
R60604:60609 Imp <> update def
R60617:60621 Imp <> aeval def
R60604:60609 Imp <> update def
R60617:60621 Imp <> aeval def
R60637:60641 Imp <> E_Ass constr
R60637:60641 Imp <> E_Ass constr
R60705:60716 Coq.Bool.Bool <> andb_true_eq thm
R60705:60716 Coq.Bool.Bool <> andb_true_eq thm
R60892:60896 Imp <> E_Seq constr
R60892:60896 Imp <> E_Seq constr
R60961:60965 Imp <> beval def
R60961:60965 Imp <> beval def
R61021:61032 Coq.Bool.Bool <> andb_true_eq thm
R61021:61032 Coq.Bool.Bool <> andb_true_eq thm
R61141:61148 Imp <> E_IfTrue constr
R61141:61148 Imp <> E_IfTrue constr
R61210:61221 Coq.Bool.Bool <> andb_true_eq thm
R61210:61221 Coq.Bool.Bool <> andb_true_eq thm
R61330:61338 Imp <> E_IfFalse constr
R61330:61338 Imp <> E_IfFalse constr
ind 62755:62760 <> sinstr
constr 62774:62778 <> SPush
constr 62798:62802 <> SLoad
constr 62821:62825 <> SPlus
constr 62838:62843 <> SMinus
constr 62856:62860 <> SMult
R62789:62794 Imp <> sinstr ind
R62782:62784 Coq.Init.Datatypes <> nat ind
R62812:62817 Imp <> sinstr ind
R62806:62807 SfLib <> id ind
R62829:62834 Imp <> sinstr ind
R62847:62852 Imp <> sinstr ind
R62864:62869 Imp <> sinstr ind
def 63514:63522 <> s_execute
R63530:63534 Imp <> state def
R63546:63549 Coq.Init.Datatypes <> list ind
R63551:63553 Coq.Init.Datatypes <> nat ind
R63583:63586 Coq.Init.Datatypes <> list ind
R63588:63593 Imp <> sinstr ind
R63615:63618 Coq.Init.Datatypes <> list ind
R63620:63622 Coq.Init.Datatypes <> nat ind
R63642:63645 Imp <> prog var
R63635:63639 Imp <> stack var
R63669:63672 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63662:63666 Imp <> SPush constr
R63679:63687 Imp <> s_execute def
R63694:63695 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63696:63700 Imp <> stack var
R63689:63690 Imp <> st var
R63724:63727 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63716:63720 Imp <> SLoad constr
R63734:63742 Imp <> s_execute def
R63753:63754 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63748:63749 Imp <> st var
R63755:63759 Imp <> stack var
R63744:63745 Imp <> st var
R63774:63775 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63778:63779 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63789:63790 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63784:63788 Imp <> SPlus constr
R63797:63805 Imp <> s_execute def
R63816:63817 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63813:63813 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R63807:63808 Imp <> st var
R63834:63835 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63838:63839 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63850:63851 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63844:63849 Imp <> SMinus constr
R63858:63866 Imp <> s_execute def
R63877:63878 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63874:63874 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R63868:63869 Imp <> st var
R63895:63896 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63899:63900 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63910:63911 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63905:63909 Imp <> SMult constr
R63918:63926 Imp <> s_execute def
R63937:63938 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R63934:63934 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R63928:63929 Imp <> st var
R63956:63958 Coq.Init.Datatypes <> nil constr
R63963:63967 Imp <> stack var
R63983:63985 Coq.Init.Datatypes <> nil constr
def 64003:64012 <> s_execute1
R64088:64093 Coq.Init.Logic <> :type_scope:x_'='_x not
R64021:64029 Imp <> s_execute def
R64053:64053 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64061:64062 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64070:64071 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64079:64080 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64087:64087 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64081:64086 Imp <> SMinus constr
R64072:64076 Imp <> SPush constr
R64063:64067 Imp <> SPush constr
R64054:64058 Imp <> SPush constr
R64043:64044 Coq.Lists.List ListNotations :list_scope:'['_']' not
R64031:64041 Imp <> empty_state def
R64094:64094 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64096:64097 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64099:64099 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 64136:64145 <> s_execute2
R64234:64239 Coq.Init.Logic <> :type_scope:x_'='_x not
R64154:64162 Imp <> s_execute def
R64202:64202 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64210:64211 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64219:64220 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64226:64227 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64233:64233 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64228:64232 Imp <> SPlus constr
R64221:64225 Imp <> SMult constr
R64212:64216 Imp <> SLoad constr
R64218:64218 Imp <> X def
R64203:64207 Imp <> SPush constr
R64189:64189 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64191:64191 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64193:64193 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64165:64170 Imp <> update def
R64184:64184 Imp <> X def
R64172:64182 Imp <> empty_state def
R64240:64240 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64243:64244 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64246:64246 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 64495:64503 <> s_compile
R64510:64513 Imp <> aexp ind
R64518:64521 Coq.Init.Datatypes <> list ind
R64523:64528 Imp <> sinstr ind
R64541:64541 Imp <> e var
R64555:64558 Imp <> ANum constr
R64565:64565 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64573:64573 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64566:64570 Imp <> SPush constr
R64582:64584 Imp <> AId constr
R64592:64592 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64601:64601 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64593:64597 Imp <> SLoad constr
R64610:64614 Imp <> APlus constr
R64637:64640 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64625:64633 Imp <> s_compile def
R64653:64656 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64641:64649 Imp <> s_compile def
R64657:64657 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64663:64663 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64658:64662 Imp <> SPlus constr
R64672:64677 Imp <> AMinus constr
R64700:64703 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64688:64696 Imp <> s_compile def
R64716:64719 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64704:64712 Imp <> s_compile def
R64720:64720 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64727:64727 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64721:64726 Imp <> SMinus constr
R64736:64740 Imp <> AMult constr
R64763:64766 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64751:64759 Imp <> s_compile def
R64779:64782 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R64767:64775 Imp <> s_compile def
R64783:64783 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64789:64789 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64784:64788 Imp <> SMult constr
def 64808:64817 <> s_compile1
R64876:64880 Coq.Init.Logic <> :type_scope:x_'='_x not
R64825:64833 Imp <> s_compile def
R64836:64841 Imp <> AMinus constr
R64852:64856 Imp <> AMult constr
R64868:64870 Imp <> AId constr
R64872:64872 Imp <> Y def
R64859:64862 Imp <> ANum constr
R64844:64846 Imp <> AId constr
R64848:64848 Imp <> X def
R64881:64881 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64889:64890 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64898:64899 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64907:64908 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64914:64915 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64922:64922 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R64916:64921 Imp <> SMinus constr
R64909:64913 Imp <> SMult constr
R64900:64904 Imp <> SLoad constr
R64906:64906 Imp <> Y def
R64891:64895 Imp <> SPush constr
R64882:64886 Imp <> SLoad constr
R64888:64888 Imp <> X def
prf 65720:65737 <> s_compile_correct'
R65829:65861 Coq.Init.Logic <> :type_scope:x_'='_x not
R65792:65800 Imp <> s_execute def
R65820:65823 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R65809:65817 Imp <> s_compile def
R65819:65819 Imp <> e var
R65824:65827 Imp <> prog var
R65805:65806 Imp <> is var
R65802:65803 Imp <> st var
R65862:65870 Imp <> s_execute def
R65894:65897 Imp <> prog var
R65886:65889 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65876:65880 Imp <> aeval def
R65885:65885 Imp <> e var
R65882:65883 Imp <> st var
R65890:65891 Imp <> is var
R65872:65873 Imp <> st var
R66125:66131 Coq.Lists.List <> app_ass syndef
R66125:66131 Coq.Lists.List <> app_ass syndef
R66162:66168 Coq.Lists.List <> app_ass syndef
R66162:66168 Coq.Lists.List <> app_ass syndef
R66242:66248 Coq.Lists.List <> app_ass syndef
R66242:66248 Coq.Lists.List <> app_ass syndef
R66279:66285 Coq.Lists.List <> app_ass syndef
R66279:66285 Coq.Lists.List <> app_ass syndef
R66353:66359 Coq.Lists.List <> app_ass syndef
R66353:66359 Coq.Lists.List <> app_ass syndef
R66390:66396 Coq.Lists.List <> app_ass syndef
R66390:66396 Coq.Lists.List <> app_ass syndef
prf 66450:66466 <> s_compile_correct
R66483:66487 Imp <> state def
R66495:66498 Imp <> aexp ind
R66533:66535 Coq.Init.Logic <> :type_scope:x_'='_x not
R66504:66512 Imp <> s_execute def
R66521:66529 Imp <> s_compile def
R66531:66531 Imp <> e var
R66517:66518 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66514:66515 Imp <> st var
R66536:66537 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R66548:66549 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R66538:66542 Imp <> aeval def
R66547:66547 Imp <> e var
R66544:66545 Imp <> st var
R66589:66591 Coq.Init.Logic <> :type_scope:x_'='_x not
R66578:66586 Imp <> s_compile def
R66603:66606 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R66592:66600 Imp <> s_compile def
R66607:66608 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66589:66591 Coq.Init.Logic <> :type_scope:x_'='_x not
R66578:66586 Imp <> s_compile def
R66603:66606 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R66592:66600 Imp <> s_compile def
R66607:66608 Coq.Lists.List ListNotations :list_scope:'['_']' not
R66625:66633 Coq.Lists.List <> app_nil_r thm
R66625:66633 Coq.Lists.List <> app_nil_r thm
R66676:66693 Imp <> s_compile_correct' thm
R66676:66693 Imp <> s_compile_correct' thm
mod 66788:66795 <> BreakImp
ind 67092:67094 BreakImp com
constr 67110:67114 BreakImp CSkip
constr 67126:67131 BreakImp CBreak
constr 67143:67146 BreakImp CAss
constr 67172:67175 BreakImp CSeq
constr 67201:67203 BreakImp CIf
constr 67237:67242 BreakImp CWhile
R67118:67120 Imp <> com ind
R67135:67137 Imp <> com ind
R67164:67166 Imp <> com ind
R67156:67159 Imp BreakImp aexp ind
R67150:67151 SfLib <> id ind
R67193:67195 Imp <> com ind
R67186:67188 Imp <> com ind
R67179:67181 Imp <> com ind
R67229:67231 Imp <> com ind
R67222:67224 Imp <> com ind
R67215:67217 Imp <> com ind
R67207:67210 Imp BreakImp bexp ind
R67261:67263 Imp <> com ind
R67254:67256 Imp <> com ind
R67246:67249 Imp BreakImp bexp ind
R67478:67482 Imp BreakImp CSkip constr
not 67464 BreakImp ::'SKIP'
R67509:67514 Imp BreakImp CBreak constr
not 67494 BreakImp ::'BREAK'
R67544:67547 Imp BreakImp CAss constr
not 67526 BreakImp ::x_'::='_x
R67594:67597 Imp BreakImp CSeq constr
not 67578 BreakImp ::x_';'_x
R67682:67687 Imp BreakImp CWhile constr
not 67651 BreakImp ::'WHILE'_x_'DO'_x_'END'
R67781:67783 Imp BreakImp CIf constr
not 67739 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 68877:68882 BreakImp status
constr 68898:68906 BreakImp SContinue
constr 68921:68926 BreakImp SBreak
R68910:68915 Imp <> status ind
R68930:68935 Imp <> status ind
ind 71341:71345 BreakImp ceval
constr 71396:71401 BreakImp E_Skip
constr 71455:71461 BreakImp E_Break
constr 71507:71511 BreakImp E_Ass
constr 71588:71597 BreakImp E_SeqBreak
constr 71724:71728 BreakImp E_Seq
constr 71942:71949 BreakImp E_IfTrue
constr 72147:72155 BreakImp E_IfFalse
constr 72354:72364 BreakImp E_WhileDone
constr 72484:72495 BreakImp E_WhileBreak
constr 72687:72697 BreakImp E_WhileCont
R71375:71379 Imp BreakImp state def
R71365:71370 Imp BreakImp status ind
R71356:71360 Imp BreakImp state def
R71349:71351 Imp BreakImp com ind
R73068:73072 Imp <> ceval ind
R71427:71429 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71432:71435 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71445:71447 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71422:71426 Imp BreakImp CSkip constr
R71430:71431 Imp <> st var
R71436:71444 Imp BreakImp SContinue constr
R71448:71449 Imp <> st var
R71482:71484 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71487:71490 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71497:71499 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71476:71481 Imp BreakImp CBreak constr
R71485:71486 Imp <> st var
R71491:71496 Imp BreakImp SBreak constr
R71500:71501 Imp <> st var
R71538:71540 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71543:71546 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71556:71558 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71530:71533 Imp BreakImp CAss constr
R71537:71537 Imp <> e var
R71535:71535 Imp <> x var
R71541:71542 Imp <> st var
R71547:71555 Imp BreakImp SContinue constr
R71559:71564 Imp BreakImp update def
R71572:71576 Imp BreakImp aeval def
R71581:71581 Imp <> e var
R71578:71579 Imp <> st var
R71569:71569 Imp <> x var
R71566:71567 Imp <> st var
R71698:71700 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71703:71706 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71713:71715 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71688:71691 Imp BreakImp CSeq constr
R71696:71697 Imp <> s2 var
R71693:71694 Imp <> s1 var
R71701:71702 Imp <> st var
R71707:71712 Imp BreakImp SBreak constr
R71716:71718 Imp <> st' var
R71624:71626 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71629:71632 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71639:71641 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71622:71623 Imp <> s1 var
R71627:71628 Imp <> st var
R71633:71638 Imp BreakImp SBreak constr
R71642:71644 Imp <> st' var
R71917:71919 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71922:71925 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71930:71932 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71907:71910 Imp BreakImp CSeq constr
R71915:71916 Imp <> s2 var
R71912:71913 Imp <> s1 var
R71920:71921 Imp <> st var
R71926:71929 Imp <> stat var
R71933:71936 Imp <> st'' var
R71838:71840 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71844:71847 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71852:71854 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71836:71837 Imp <> s2 var
R71841:71843 Imp <> st' var
R71848:71851 Imp <> stat var
R71855:71858 Imp <> st'' var
R71765:71767 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71770:71773 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71783:71785 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R71763:71764 Imp <> s1 var
R71768:71769 Imp <> st var
R71774:71782 Imp BreakImp SContinue constr
R71786:71788 Imp <> st' var
R72125:72126 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72129:72132 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72137:72139 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72114:72116 Imp BreakImp CIf constr
R72123:72124 Imp <> s2 var
R72120:72121 Imp <> s1 var
R72118:72118 Imp <> b var
R72127:72128 Imp <> st var
R72133:72136 Imp <> stat var
R72140:72142 Imp <> st' var
R72048:72050 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72053:72056 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72061:72063 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72046:72047 Imp <> s1 var
R72051:72052 Imp <> st var
R72057:72060 Imp <> stat var
R72064:72066 Imp <> st' var
R71992:71994 Coq.Init.Logic <> :type_scope:x_'='_x not
R71982:71986 Imp BreakImp beval def
R71991:71991 Imp <> b var
R71988:71989 Imp <> st var
R71995:71998 Coq.Init.Datatypes <> true constr
R72331:72333 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72336:72339 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72344:72346 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72320:72322 Imp BreakImp CIf constr
R72329:72330 Imp <> s2 var
R72326:72327 Imp <> s1 var
R72324:72324 Imp <> b var
R72334:72335 Imp <> st var
R72340:72343 Imp <> stat var
R72347:72349 Imp <> st' var
R72254:72256 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72259:72262 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72267:72269 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72252:72253 Imp <> s2 var
R72257:72258 Imp <> st var
R72263:72266 Imp <> stat var
R72270:72272 Imp <> st' var
R72197:72199 Coq.Init.Logic <> :type_scope:x_'='_x not
R72187:72191 Imp BreakImp beval def
R72196:72196 Imp <> b var
R72193:72194 Imp <> st var
R72200:72204 Coq.Init.Datatypes <> false constr
R72457:72459 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72462:72465 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72475:72477 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72447:72452 Imp BreakImp CWhile constr
R72456:72456 Imp <> s var
R72454:72454 Imp <> b var
R72460:72461 Imp <> st var
R72466:72474 Imp BreakImp SContinue constr
R72478:72479 Imp <> st var
R72393:72395 Coq.Init.Logic <> :type_scope:x_'='_x not
R72383:72387 Imp BreakImp beval def
R72392:72392 Imp <> b var
R72389:72390 Imp <> st var
R72396:72400 Coq.Init.Datatypes <> false constr
R72659:72661 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72664:72667 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72677:72679 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72649:72654 Imp BreakImp CWhile constr
R72658:72658 Imp <> s var
R72656:72656 Imp <> b var
R72662:72663 Imp <> st var
R72668:72676 Imp BreakImp SContinue constr
R72680:72682 Imp <> st' var
R72582:72584 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72587:72590 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72597:72599 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72581:72581 Imp <> s var
R72585:72586 Imp <> st var
R72591:72596 Imp BreakImp SBreak constr
R72600:72602 Imp <> st' var
R72528:72530 Coq.Init.Logic <> :type_scope:x_'='_x not
R72518:72522 Imp BreakImp beval def
R72527:72527 Imp <> b var
R72524:72525 Imp <> st var
R72531:72534 Coq.Init.Datatypes <> true constr
R72951:72953 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72956:72959 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72969:72971 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72941:72946 Imp BreakImp CWhile constr
R72950:72950 Imp <> s var
R72948:72948 Imp <> b var
R72954:72955 Imp <> st var
R72960:72968 Imp BreakImp SContinue constr
R72972:72975 Imp <> st'' var
R72874:72876 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72880:72883 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72888:72890 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72864:72869 Imp BreakImp CWhile constr
R72873:72873 Imp <> s var
R72871:72871 Imp <> b var
R72877:72879 Imp <> st' var
R72884:72887 Imp <> stat var
R72891:72894 Imp <> st'' var
R72794:72796 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72799:72802 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72812:72814 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R72793:72793 Imp <> s var
R72797:72798 Imp <> st var
R72803:72811 Imp BreakImp SContinue constr
R72815:72817 Imp <> st' var
R72740:72742 Coq.Init.Logic <> :type_scope:x_'='_x not
R72730:72734 Imp BreakImp beval def
R72739:72739 Imp <> b var
R72736:72737 Imp <> st var
R72743:72746 Coq.Init.Datatypes <> true constr
R73068:73072 Imp BreakImp ceval ind
not 73037 BreakImp ::x_'/'_x_'||'_x_'/'_x
prf 73540:73551 BreakImp break_ignore
R73616:73618 Coq.Init.Logic <> :type_scope:x_'='_x not
R73614:73615 Imp <> st var
R73619:73621 Imp <> st' var
R73579:73579 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73588:73591 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73594:73597 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73599:73601 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73585:73586 Imp BreakImp ::x_';'_x not
R73580:73584 Imp BreakImp ::'BREAK' not
R73587:73587 Imp <> c var
R73592:73593 Imp <> st var
R73598:73598 Imp <> s var
R73602:73604 Imp <> st' var
prf 73713:73726 BreakImp while_continue
R73794:73796 Coq.Init.Logic <> :type_scope:x_'='_x not
R73793:73793 Imp <> s var
R73797:73805 Imp BreakImp SContinue constr
R73753:73753 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73770:73773 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73776:73779 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73781:73783 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73754:73759 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73761:73764 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73766:73769 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73760:73760 Imp <> b var
R73765:73765 Imp <> c var
R73774:73775 Imp <> st var
R73780:73780 Imp <> s var
R73784:73786 Imp <> st' var
prf 73892:73911 BreakImp while_stops_on_break
R73987:73987 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74004:74007 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74010:74013 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74023:74025 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73988:73993 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73995:73998 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74000:74003 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R73994:73994 Imp <> b var
R73999:73999 Imp <> c var
R74008:74009 Imp <> st var
R74014:74022 Imp BreakImp SContinue constr
R74026:74028 Imp <> st' var
R73960:73962 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73965:73968 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73975:73977 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R73959:73959 Imp <> c var
R73963:73964 Imp <> st var
R73969:73974 Imp BreakImp SBreak constr
R73978:73980 Imp <> st' var
R73946:73948 Coq.Init.Logic <> :type_scope:x_'='_x not
R73936:73940 Imp BreakImp beval def
R73945:73945 Imp <> b var
R73942:73943 Imp <> st var
R73949:73952 Coq.Init.Datatypes <> true constr
R74072:74083 Imp BreakImp E_WhileBreak constr
R74072:74083 Imp BreakImp E_WhileBreak constr
R74108:74114 Imp BreakImp E_Break constr
R74108:74114 Imp BreakImp E_Break constr
R74128:74139 Imp BreakImp E_WhileBreak constr
R74128:74139 Imp BreakImp E_WhileBreak constr
R74157:74166 Imp BreakImp E_SeqBreak constr
R74157:74166 Imp BreakImp E_SeqBreak constr
R74190:74201 Imp BreakImp E_WhileBreak constr
R74190:74201 Imp BreakImp E_WhileBreak constr
R74219:74223 Imp BreakImp E_Seq constr
R74219:74223 Imp BreakImp E_Seq constr
R74279:74290 Imp BreakImp E_WhileBreak constr
R74279:74290 Imp BreakImp E_WhileBreak constr
R74308:74315 Imp BreakImp E_IfTrue constr
R74308:74315 Imp BreakImp E_IfTrue constr
R74352:74363 Imp BreakImp E_WhileBreak constr
R74352:74363 Imp BreakImp E_WhileBreak constr
R74381:74389 Imp BreakImp E_IfFalse constr
R74381:74389 Imp BreakImp E_IfFalse constr
prf 74468:74483 BreakImp while_break_true
R74580:74586 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R74591:74592 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R74594:74596 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74601:74604 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74611:74613 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74593:74593 Imp <> c var
R74597:74600 Imp <> st'' var
R74605:74610 Imp BreakImp SBreak constr
R74614:74616 Imp <> st' var
R74567:74569 Coq.Init.Logic <> :type_scope:x_'='_x not
R74556:74560 Imp BreakImp beval def
R74566:74566 Imp <> b var
R74562:74564 Imp <> st' var
R74570:74573 Coq.Init.Datatypes <> true constr
R74508:74508 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74525:74528 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74531:74534 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74544:74546 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74509:74514 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74516:74519 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74521:74524 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R74515:74515 Imp <> b var
R74520:74520 Imp <> c var
R74529:74530 Imp <> st var
R74535:74543 Imp BreakImp SContinue constr
R74547:74549 Imp <> st' var
prf 74676:74694 BreakImp ceval_deterministic
R74707:74709 Imp BreakImp com ind
R74799:74802 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R74793:74795 Coq.Init.Logic <> :type_scope:x_'='_x not
R74790:74792 Imp <> st1 var
R74796:74798 Imp <> st2 var
R74805:74807 Coq.Init.Logic <> :type_scope:x_'='_x not
R74803:74804 Imp <> s1 var
R74808:74809 Imp <> s2 var
R74764:74766 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74769:74772 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74775:74777 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74763:74763 Imp <> c var
R74767:74768 Imp <> st var
R74773:74774 Imp <> s2 var
R74778:74780 Imp <> st2 var
R74736:74738 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74741:74744 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74747:74749 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R74735:74735 Imp <> c var
R74739:74740 Imp <> st var
R74745:74746 Imp <> s1 var
R74750:74752 Imp <> st1 var
R75138:75141 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R75131:75133 Coq.Init.Logic <> :type_scope:x_'='_x not
R75151:75153 Coq.Init.Logic <> :type_scope:x_'='_x not
R75142:75150 Imp BreakImp SContinue constr
R75154:75162 Imp BreakImp SContinue constr
R75138:75141 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R75131:75133 Coq.Init.Logic <> :type_scope:x_'='_x not
R75151:75153 Coq.Init.Logic <> :type_scope:x_'='_x not
R75142:75150 Imp BreakImp SContinue constr
R75154:75162 Imp BreakImp SContinue constr
def 76485:76501 BreakImp bevalShortCircuit
R76509:76513 Imp BreakImp state def
R76521:76524 Imp BreakImp bexp ind
R76529:76532 Coq.Init.Datatypes <> bool ind
R76545:76545 Imp <> b var
R76559:76563 Imp BreakImp BTrue constr
R76568:76571 Coq.Init.Datatypes <> true constr
R76580:76585 Imp BreakImp BFalse constr
R76590:76594 Coq.Init.Datatypes <> false constr
R76603:76605 Imp BreakImp BEq constr
R76616:76622 Coq.Arith.EqNat <> beq_nat def
R76639:76643 Imp BreakImp aeval def
R76645:76646 Imp <> st var
R76625:76629 Imp BreakImp aeval def
R76631:76632 Imp <> st var
R76659:76661 Imp BreakImp BLe constr
R76672:76678 SfLib <> ble_nat def
R76695:76699 Imp BreakImp aeval def
R76701:76702 Imp <> st var
R76681:76685 Imp BreakImp aeval def
R76687:76688 Imp <> st var
R76715:76718 Imp BreakImp BNot constr
R76725:76728 Coq.Init.Datatypes <> negb def
R76731:76747 Imp <> bevalShortCircuit def
R76749:76750 Imp <> st var
R76762:76765 Imp BreakImp BAnd constr
R76779:76795 Imp <> bevalShortCircuit def
R76797:76798 Imp <> st var
R76880:76884 Coq.Init.Datatypes <> false constr
R76830:76846 Imp <> bevalShortCircuit def
R76848:76849 Imp <> st var
prf 76902:76915 BreakImp shortCircuitEq
R76942:76944 Coq.Init.Logic <> :type_scope:x_'='_x not
R76932:76936 Imp BreakImp beval def
R76941:76941 Imp <> b var
R76938:76939 Imp <> st var
R76945:76961 Imp BreakImp bevalShortCircuit def
R76966:76966 Imp <> b var
R76963:76964 Imp <> st var
R77774:77781 Imp <> <> mod
mod 77793:77799 <> WithFor
ind 77836:77838 WithFor com
constr 77853:77857 WithFor CSkip
constr 77869:77874 WithFor CBreak
constr 77886:77889 WithFor CAss
constr 77915:77918 WithFor CSeq
constr 77944:77946 WithFor CIf
constr 77980:77985 WithFor CWhile
constr 78012:78015 WithFor CFor
R77861:77863 Imp <> com ind
R77878:77880 Imp <> com ind
R77907:77909 Imp <> com ind
R77899:77902 Imp WithFor aexp ind
R77893:77894 SfLib <> id ind
R77936:77938 Imp <> com ind
R77929:77931 Imp <> com ind
R77922:77924 Imp <> com ind
R77972:77974 Imp <> com ind
R77965:77967 Imp <> com ind
R77958:77960 Imp <> com ind
R77950:77953 Imp WithFor bexp ind
R78004:78006 Imp <> com ind
R77997:77999 Imp <> com ind
R77989:77992 Imp WithFor bexp ind
R78048:78050 Imp <> com ind
R78041:78043 Imp <> com ind
R78034:78036 Imp <> com ind
R78026:78029 Imp WithFor bexp ind
R78019:78021 Imp <> com ind
ind 78105:78109 WithFor ceval
constr 78150:78155 WithFor E_Skip
constr 78197:78201 WithFor E_Ass
constr 78295:78299 WithFor E_Seq
constr 78416:78423 WithFor E_IfTrue
constr 78537:78545 WithFor E_IfFalse
constr 78660:78669 WithFor E_WhileEnd
constr 78750:78760 WithFor E_WhileLoop
constr 78912:78920 WithFor E_ForDone
constr 79096:79100 WithFor E_For
R78129:78133 Imp WithFor state def
R78120:78124 Imp WithFor state def
R78113:78115 Imp WithFor com ind
R79450:79454 Imp <> ceval ind
R78181:78183 Imp WithFor ::x_'/'_x_'||'_x not
R78186:78189 Imp WithFor ::x_'/'_x_'||'_x not
R78176:78180 Imp WithFor CSkip constr
R78184:78185 Imp <> st var
R78190:78191 Imp <> st var
R78255:78255 Imp WithFor ::x_'/'_x_'||'_x not
R78265:78268 Imp WithFor ::x_'/'_x_'||'_x not
R78271:78275 Imp WithFor ::x_'/'_x_'||'_x not
R78289:78289 Imp WithFor ::x_'/'_x_'||'_x not
R78256:78259 Imp WithFor CAss constr
R78263:78264 Imp <> a1 var
R78261:78261 Imp <> x var
R78269:78270 Imp <> st var
R78276:78281 Imp WithFor update def
R78288:78288 Imp <> n var
R78286:78286 Imp <> x var
R78283:78284 Imp <> st var
R78241:78243 Coq.Init.Logic <> :type_scope:x_'='_x not
R78230:78234 Imp WithFor aeval def
R78239:78240 Imp <> a1 var
R78236:78237 Imp <> st var
R78244:78244 Imp <> n var
R78386:78386 Imp WithFor ::x_'/'_x_'||'_x not
R78397:78400 Imp WithFor ::x_'/'_x_'||'_x not
R78403:78406 Imp WithFor ::x_'/'_x_'||'_x not
R78387:78390 Imp WithFor CSeq constr
R78395:78396 Imp <> c2 var
R78392:78393 Imp <> c1 var
R78401:78402 Imp <> st var
R78407:78410 Imp <> st'' var
R78362:78364 Imp WithFor ::x_'/'_x_'||'_x not
R78368:78371 Imp WithFor ::x_'/'_x_'||'_x not
R78360:78361 Imp <> c2 var
R78365:78367 Imp <> st' var
R78372:78375 Imp <> st'' var
R78337:78339 Imp WithFor ::x_'/'_x_'||'_x not
R78342:78346 Imp WithFor ::x_'/'_x_'||'_x not
R78335:78336 Imp <> c1 var
R78340:78341 Imp <> st var
R78347:78349 Imp <> st' var
R78507:78507 Imp WithFor ::x_'/'_x_'||'_x not
R78519:78522 Imp WithFor ::x_'/'_x_'||'_x not
R78525:78528 Imp WithFor ::x_'/'_x_'||'_x not
R78508:78510 Imp WithFor CIf constr
R78517:78518 Imp <> c2 var
R78514:78515 Imp <> c1 var
R78512:78512 Imp <> b var
R78523:78524 Imp <> st var
R78529:78531 Imp <> st' var
R78485:78487 Imp WithFor ::x_'/'_x_'||'_x not
R78490:78493 Imp WithFor ::x_'/'_x_'||'_x not
R78483:78484 Imp <> c1 var
R78488:78489 Imp <> st var
R78494:78496 Imp <> st' var
R78466:78468 Coq.Init.Logic <> :type_scope:x_'='_x not
R78456:78460 Imp WithFor beval def
R78465:78465 Imp <> b var
R78462:78463 Imp <> st var
R78469:78472 Coq.Init.Datatypes <> true constr
R78630:78630 Imp WithFor ::x_'/'_x_'||'_x not
R78642:78645 Imp WithFor ::x_'/'_x_'||'_x not
R78648:78651 Imp WithFor ::x_'/'_x_'||'_x not
R78631:78633 Imp WithFor CIf constr
R78640:78641 Imp <> c2 var
R78637:78638 Imp <> c1 var
R78635:78635 Imp <> b var
R78646:78647 Imp <> st var
R78652:78654 Imp <> st' var
R78608:78610 Imp WithFor ::x_'/'_x_'||'_x not
R78613:78616 Imp WithFor ::x_'/'_x_'||'_x not
R78606:78607 Imp <> c2 var
R78611:78612 Imp <> st var
R78617:78619 Imp <> st' var
R78588:78590 Coq.Init.Logic <> :type_scope:x_'='_x not
R78578:78582 Imp WithFor beval def
R78587:78587 Imp <> b var
R78584:78585 Imp <> st var
R78591:78595 Coq.Init.Datatypes <> false constr
R78722:78722 Imp WithFor ::x_'/'_x_'||'_x not
R78733:78736 Imp WithFor ::x_'/'_x_'||'_x not
R78739:78742 Imp WithFor ::x_'/'_x_'||'_x not
R78723:78728 Imp WithFor CWhile constr
R78732:78732 Imp <> c var
R78730:78730 Imp <> b var
R78737:78738 Imp <> st var
R78743:78744 Imp <> st var
R78704:78706 Coq.Init.Logic <> :type_scope:x_'='_x not
R78694:78698 Imp WithFor beval def
R78703:78703 Imp <> b var
R78700:78701 Imp <> st var
R78707:78711 Coq.Init.Datatypes <> false constr
R78881:78881 Imp WithFor ::x_'/'_x_'||'_x not
R78892:78896 Imp WithFor ::x_'/'_x_'||'_x not
R78899:78902 Imp WithFor ::x_'/'_x_'||'_x not
R78882:78887 Imp WithFor CWhile constr
R78891:78891 Imp <> c var
R78889:78889 Imp <> b var
R78897:78898 Imp <> st var
R78903:78906 Imp <> st'' var
R78844:78844 Imp WithFor ::x_'/'_x_'||'_x not
R78855:78859 Imp WithFor ::x_'/'_x_'||'_x not
R78863:78866 Imp WithFor ::x_'/'_x_'||'_x not
R78845:78850 Imp WithFor CWhile constr
R78854:78854 Imp <> c var
R78852:78852 Imp <> b var
R78860:78862 Imp <> st' var
R78867:78870 Imp <> st'' var
R78822:78824 Imp WithFor ::x_'/'_x_'||'_x not
R78827:78830 Imp WithFor ::x_'/'_x_'||'_x not
R78821:78821 Imp <> c var
R78825:78826 Imp <> st var
R78831:78833 Imp <> st' var
R78804:78806 Coq.Init.Logic <> :type_scope:x_'='_x not
R78794:78798 Imp WithFor beval def
R78803:78803 Imp <> b var
R78800:78801 Imp <> st var
R78807:78810 Coq.Init.Datatypes <> true constr
R79079:79081 Imp WithFor ::x_'/'_x_'||'_x not
R79084:79087 Imp WithFor ::x_'/'_x_'||'_x not
R79056:79059 Imp WithFor CFor constr
R79075:79078 Imp <> body var
R79068:79073 Imp <> update var
R79066:79066 Imp <> b var
R79061:79064 Imp <> init var
R79082:79083 Imp <> st var
R79088:79090 Imp <> st' var
R79026:79028 Coq.Init.Logic <> :type_scope:x_'='_x not
R79015:79019 Imp WithFor beval def
R79025:79025 Imp <> b var
R79021:79023 Imp <> st' var
R79029:79033 Coq.Init.Datatypes <> false constr
R78980:78982 Imp WithFor ::x_'/'_x_'||'_x not
R78985:78988 Imp WithFor ::x_'/'_x_'||'_x not
R78976:78979 Imp <> init var
R78983:78984 Imp <> st var
R78989:78991 Imp <> st' var
R79400:79402 Imp WithFor ::x_'/'_x_'||'_x not
R79405:79408 Imp WithFor ::x_'/'_x_'||'_x not
R79377:79380 Imp WithFor CFor constr
R79396:79399 Imp <> body var
R79389:79394 Imp <> update var
R79387:79387 Imp <> b var
R79382:79385 Imp <> init var
R79403:79404 Imp <> st var
R79409:79414 Imp <> st'''' var
R79341:79343 Imp WithFor ::x_'/'_x_'||'_x not
R79349:79352 Imp WithFor ::x_'/'_x_'||'_x not
R79317:79320 Imp WithFor CFor constr
R79337:79340 Imp <> body var
R79330:79335 Imp <> update var
R79328:79328 Imp <> b var
R79322:79326 Imp WithFor CSkip constr
R79344:79348 Imp <> st''' var
R79353:79358 Imp <> st'''' var
R79283:79285 Imp WithFor ::x_'/'_x_'||'_x not
R79290:79293 Imp WithFor ::x_'/'_x_'||'_x not
R79277:79282 Imp <> update var
R79286:79289 Imp <> st'' var
R79294:79298 Imp <> st''' var
R79245:79247 Imp WithFor ::x_'/'_x_'||'_x not
R79251:79254 Imp WithFor ::x_'/'_x_'||'_x not
R79241:79244 Imp <> body var
R79248:79250 Imp <> st' var
R79255:79258 Imp <> st'' var
R79215:79217 Coq.Init.Logic <> :type_scope:x_'='_x not
R79204:79208 Imp WithFor beval def
R79214:79214 Imp <> b var
R79210:79212 Imp <> st' var
R79218:79221 Coq.Init.Datatypes <> true constr
R79174:79176 Imp WithFor ::x_'/'_x_'||'_x not
R79179:79182 Imp WithFor ::x_'/'_x_'||'_x not
R79170:79173 Imp <> init var
R79177:79178 Imp <> st var
R79183:79185 Imp <> st' var
R79450:79454 Imp WithFor ceval ind
not 79425 WithFor ::x_'/'_x_'||'_x
R79475:79481 Imp <> <> mod
