DIGEST f5cb4f87bde21b6a17390bb5c52cebbb
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1466:1469 <> list
constr 1494:1496 <> nil
constr 1511:1514 <> cons
R1500:1503 Poly <> list ind
R1533:1536 Poly <> list ind
R1523:1526 Poly <> list ind
R2728:2730 Poly <> nil constr
R2780:2783 Poly <> cons constr
R3191:3194 Poly <> cons constr
R3203:3206 Poly <> cons constr
R3215:3217 Poly <> nil constr
R3219:3221 Coq.Init.Datatypes <> nat ind
R3208:3210 Coq.Init.Datatypes <> nat ind
R3196:3198 Coq.Init.Datatypes <> nat ind
def 3602:3607 <> length
R3621:3624 Poly <> list ind
R3626:3626 Poly <> X var
R3631:3633 Coq.Init.Datatypes <> nat ind
R3646:3646 Poly <> l var
R3657:3659 Poly <> nil constr
R3675:3678 Poly <> cons constr
R3687:3687 Coq.Init.Datatypes <> S constr
R3690:3695 Poly <> length def
R3697:3697 Poly <> X var
def 4234:4245 <> test_length1
R4299:4301 Coq.Init.Logic <> :type_scope:x_'='_x not
R4253:4258 Poly <> length def
R4265:4268 Poly <> cons constr
R4277:4280 Poly <> cons constr
R4289:4291 Poly <> nil constr
R4293:4295 Coq.Init.Datatypes <> nat ind
R4282:4284 Coq.Init.Datatypes <> nat ind
R4270:4272 Coq.Init.Datatypes <> nat ind
R4260:4262 Coq.Init.Datatypes <> nat ind
def 4458:4469 <> test_length2
R4516:4518 Coq.Init.Logic <> :type_scope:x_'='_x not
R4477:4482 Poly <> length def
R4490:4493 Poly <> cons constr
R4506:4508 Poly <> nil constr
R4510:4513 Basics <> bool ind
R4500:4503 Basics <> true constr
R4495:4498 Basics <> bool ind
R4484:4487 Basics <> bool ind
def 4683:4685 <> app
R4707:4710 Poly <> list ind
R4712:4712 Poly <> X var
R4734:4737 Poly <> list ind
R4739:4739 Poly <> X var
R4753:4754 Poly <> l1 var
R4765:4767 Poly <> nil constr
R4777:4778 Poly <> l2 var
R4784:4787 Poly <> cons constr
R4796:4799 Poly <> cons constr
R4806:4808 Poly <> app def
R4814:4815 Poly <> l2 var
R4810:4810 Poly <> X var
R4801:4801 Poly <> X var
def 4835:4838 <> snoc
R4852:4855 Poly <> list ind
R4857:4857 Poly <> X var
R4863:4863 Poly <> X var
R4869:4872 Poly <> list ind
R4874:4874 Poly <> X var
R4888:4888 Poly <> l var
R4899:4901 Poly <> nil constr
R4911:4914 Poly <> cons constr
R4921:4923 Poly <> nil constr
R4925:4925 Poly <> X var
R4918:4918 Poly <> v var
R4916:4916 Poly <> X var
R4932:4935 Poly <> cons constr
R4944:4947 Poly <> cons constr
R4954:4957 Poly <> snoc def
R4963:4963 Poly <> v var
R4959:4959 Poly <> X var
R4949:4949 Poly <> X var
def 4983:4985 <> rev
R4999:5002 Poly <> list ind
R5004:5004 Poly <> X var
R5009:5012 Poly <> list ind
R5014:5014 Poly <> X var
R5027:5027 Poly <> l var
R5038:5040 Poly <> nil constr
R5050:5052 Poly <> nil constr
R5054:5054 Poly <> X var
R5060:5063 Poly <> cons constr
R5072:5075 Poly <> snoc def
R5080:5082 Poly <> rev def
R5084:5084 Poly <> X var
R5077:5077 Poly <> X var
def 5109:5117 <> test_rev1
R5168:5173 Coq.Init.Logic <> :type_scope:x_'='_x not
R5207:5207 Coq.Init.Logic <> :type_scope:x_'='_x not
R5125:5127 Poly <> rev def
R5134:5137 Poly <> cons constr
R5146:5149 Poly <> cons constr
R5158:5160 Poly <> nil constr
R5162:5164 Coq.Init.Datatypes <> nat ind
R5151:5153 Coq.Init.Datatypes <> nat ind
R5139:5141 Coq.Init.Datatypes <> nat ind
R5129:5131 Coq.Init.Datatypes <> nat ind
R5174:5177 Poly <> cons constr
R5186:5189 Poly <> cons constr
R5198:5200 Poly <> nil constr
R5202:5204 Coq.Init.Datatypes <> nat ind
R5191:5193 Coq.Init.Datatypes <> nat ind
R5179:5181 Coq.Init.Datatypes <> nat ind
def 5245:5253 <> test_rev2
R5277:5279 Coq.Init.Logic <> :type_scope:x_'='_x not
R5258:5260 Poly <> rev def
R5268:5270 Poly <> nil constr
R5272:5275 Basics <> bool ind
R5262:5265 Basics <> bool ind
R5280:5282 Poly <> nil constr
R5284:5287 Basics <> bool ind
mod 5324:5332 <> MumbleBaz
ind 5454:5459 MumbleBaz mumble
constr 5475:5475 MumbleBaz a
constr 5490:5490 MumbleBaz b
constr 5522:5522 MumbleBaz c
R5479:5484 Poly <> mumble ind
R5511:5516 Poly <> mumble ind
R5504:5506 Coq.Init.Datatypes <> nat ind
R5494:5499 Poly <> mumble ind
R5526:5531 Poly <> mumble ind
ind 5544:5550 MumbleBaz grumble
constr 5575:5575 MumbleBaz d
constr 5603:5603 MumbleBaz e
R5589:5595 Poly <> grumble ind
R5579:5584 Poly MumbleBaz mumble ind
R5612:5618 Poly <> grumble ind
ind 6133:6135 MumbleBaz baz
constr 6152:6152 MumbleBaz x
constr 6172:6172 MumbleBaz y
R6163:6165 Poly <> baz ind
R6156:6158 Poly <> baz ind
R6191:6193 Poly <> baz ind
R6183:6186 Basics <> bool ind
R6176:6178 Poly <> baz ind
R6280:6288 Poly <> <> mod
def 6551:6554 <> app'
R6566:6569 Poly <> list ind
R6571:6571 Poly <> X var
R6584:6585 Poly <> l1 var
R6596:6598 Poly <> nil constr
R6608:6609 Poly <> l2 var
R6615:6618 Poly <> cons constr
R6627:6630 Poly <> cons constr
R6637:6640 Poly <> app' def
R6646:6647 Poly <> l2 var
R6642:6642 Poly <> X var
R6632:6632 Poly <> X var
R6737:6740 Poly <> app' def
R6804:6806 Poly <> app def
def 9451:9457 <> length'
R9471:9474 Poly <> list ind
R9476:9476 Poly <> X var
R9481:9483 Coq.Init.Datatypes <> nat ind
R9496:9496 Poly <> l var
R9507:9509 Poly <> nil constr
R9525:9528 Poly <> cons constr
R9537:9537 Coq.Init.Datatypes <> S constr
R9540:9546 Poly <> length' def
def 9835:9841 <> list123
R9848:9851 Poly <> cons constr
R9860:9863 Poly <> cons constr
R9872:9875 Poly <> cons constr
R9884:9886 Poly <> nil constr
R9888:9890 Coq.Init.Datatypes <> nat ind
R9877:9879 Coq.Init.Datatypes <> nat ind
R9865:9867 Coq.Init.Datatypes <> nat ind
R9853:9855 Coq.Init.Datatypes <> nat ind
def 9964:9971 <> list123'
R9976:9979 Poly <> cons constr
R9986:9989 Poly <> cons constr
R9996:9999 Poly <> cons constr
R10006:10008 Poly <> nil constr
R10496:10498 Poly <> nil constr
R10496:10498 Poly <> nil constr
R10515:10518 Poly <> cons constr
R10515:10518 Poly <> cons constr
R10600:10605 Poly <> length def
R10600:10605 Poly <> length def
R10624:10626 Poly <> app def
R10624:10626 Poly <> app def
R10649:10651 Poly <> rev def
R10649:10651 Poly <> rev def
R10671:10674 Poly <> snoc def
R10671:10674 Poly <> snoc def
def 10736:10744 <> list123''
R10749:10752 Poly <> cons constr
R10757:10760 Poly <> cons constr
R10765:10768 Poly <> cons constr
R10772:10774 Poly <> nil constr
R10786:10791 Poly <> length def
R10793:10801 Poly <> list123'' def
def 10983:10990 <> length''
R11004:11007 Poly <> list ind
R11009:11009 Poly <> X var
R11014:11016 Coq.Init.Datatypes <> nat ind
R11029:11029 Poly <> l var
R11040:11042 Poly <> nil constr
R11058:11061 Poly <> cons constr
R11070:11070 Coq.Init.Datatypes <> S constr
R11073:11080 Poly <> length'' def
def 12095:12099 <> mynil
R12103:12106 Poly <> list ind
R12108:12110 Coq.Init.Datatypes <> nat ind
R12115:12117 Poly <> nil constr
R12246:12248 Poly <> nil constr
def 12263:12268 <> mynil'
R12274:12276 Poly <> nil constr
R12278:12280 Coq.Init.Datatypes <> nat ind
R12562:12565 Poly <> cons constr
not 12549 <> ::x_'::'_x
R12647:12649 Poly <> nil constr
not 12638 <> ::'['_']'
R12682:12685 Poly <> cons constr
R12693:12696 Poly <> cons constr
R12700:12701 Poly <> ::'['_']' not
not 12661 <> ::'['_x_';'_'..'_';'_x_']'
R12731:12733 Poly <> app def
not 12718 <> ::x_'++'_x
def 12866:12875 <> list123'''
R12880:12880 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12882:12883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12885:12886 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12888:12888 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13240:13245 <> repeat
R13263:13263 Poly <> X var
R13275:13277 Coq.Init.Datatypes <> nat ind
R13282:13285 Poly <> list ind
R13287:13287 Poly <> X var
R13300:13304 Poly <> count var
R13318:13318 Coq.Init.Datatypes <> S constr
R13331:13334 Poly <> ::x_'::'_x not
R13330:13330 Poly <> n var
R13335:13340 Poly <> repeat def
R13342:13342 Poly <> n var
R13358:13358 Coq.Init.Datatypes <> O constr
R13363:13365 Poly <> nil constr
def 13383:13394 <> test_repeat1
R13412:13414 Coq.Init.Logic <> :type_scope:x_'='_x not
R13399:13404 Poly <> repeat def
R13406:13409 Basics <> true constr
R13415:13418 Poly <> cons constr
R13426:13429 Poly <> cons constr
R13436:13438 Poly <> nil constr
R13431:13434 Basics <> true constr
R13420:13423 Basics <> true constr
prf 13478:13484 <> nil_app
R13512:13515 Poly <> list ind
R13517:13517 Poly <> X var
R13530:13532 Coq.Init.Logic <> :type_scope:x_'='_x not
R13522:13524 Poly <> app def
R13529:13529 Poly <> l var
R13526:13527 Poly <> ::'['_']' not
R13533:13533 Poly <> l var
prf 13581:13588 <> rev_snoc
R13641:13641 Poly <> X var
R13676:13679 Poly <> list ind
R13681:13681 Poly <> X var
R13700:13702 Coq.Init.Logic <> :type_scope:x_'='_x not
R13686:13688 Poly <> rev def
R13691:13694 Poly <> snoc def
R13698:13698 Poly <> v var
R13696:13696 Poly <> s var
R13704:13708 Poly <> ::x_'::'_x not
R13714:13714 Poly <> ::x_'::'_x not
R13703:13703 Poly <> v var
R13709:13711 Poly <> rev def
R13713:13713 Poly <> s var
prf 13835:13848 <> rev_involutive
R13880:13883 Poly <> list ind
R13885:13885 Poly <> X var
R13901:13903 Coq.Init.Logic <> :type_scope:x_'='_x not
R13890:13892 Poly <> rev def
R13895:13897 Poly <> rev def
R13899:13899 Poly <> l var
R13904:13904 Poly <> l var
R13982:13989 Poly <> rev_snoc thm
R13982:13989 Poly <> rev_snoc thm
prf 14038:14053 <> snoc_with_append
R14114:14117 Poly <> list ind
R14119:14119 Poly <> X var
R14158:14158 Poly <> X var
R14180:14182 Coq.Init.Logic <> :type_scope:x_'='_x not
R14163:14166 Poly <> snoc def
R14179:14179 Poly <> v var
R14171:14174 Poly <> ::x_'++'_x not
R14169:14170 Poly <> l1 var
R14175:14176 Poly <> l2 var
R14185:14189 Poly <> ::x_'++'_x not
R14199:14199 Poly <> ::x_'++'_x not
R14183:14184 Poly <> l1 var
R14190:14193 Poly <> snoc def
R14198:14198 Poly <> v var
R14195:14196 Poly <> l2 var
ind 14577:14580 <> prod
constr 14607:14610 <> pair
R14624:14627 Poly <> prod ind
R14645:14648 Poly <> pair constr
R14645:14648 Poly <> pair constr
R14795:14798 Poly <> pair constr
not 14779 <> ::'('_x_','_x_')'
R14931:14934 Poly <> prod ind
not 14919 <> :type_scope:x_'*'_x
def 15546:15548 <> fst
R15569:15571 Poly <> :type_scope:x_'*'_x not
R15568:15568 Poly <> X var
R15572:15572 Poly <> Y var
R15577:15577 Poly <> X var
R15590:15590 Poly <> p var
R15597:15597 Poly <> ::'('_x_','_x_')' not
R15599:15599 Poly <> ::'('_x_','_x_')' not
R15601:15601 Poly <> ::'('_x_','_x_')' not
def 15625:15627 <> snd
R15648:15650 Poly <> :type_scope:x_'*'_x not
R15647:15647 Poly <> X var
R15651:15651 Poly <> Y var
R15656:15656 Poly <> Y var
R15669:15669 Poly <> p var
R15676:15676 Poly <> ::'('_x_','_x_')' not
R15678:15678 Poly <> ::'('_x_','_x_')' not
R15680:15680 Poly <> ::'('_x_','_x_')' not
def 16021:16027 <> combine
R16048:16051 Poly <> list ind
R16053:16053 Poly <> X var
R16062:16065 Poly <> list ind
R16067:16067 Poly <> Y var
R16083:16086 Poly <> list ind
R16090:16090 Poly <> :type_scope:x_'*'_x not
R16089:16089 Poly <> X var
R16091:16091 Poly <> Y var
R16105:16105 Poly <> ::'('_x_','_x_')' not
R16108:16108 Poly <> ::'('_x_','_x_')' not
R16111:16111 Poly <> ::'('_x_','_x_')' not
R16106:16107 Poly <> lx var
R16109:16110 Poly <> ly var
R16122:16122 Poly <> ::'('_x_','_x_')' not
R16125:16125 Poly <> ::'('_x_','_x_')' not
R16127:16127 Poly <> ::'('_x_','_x_')' not
R16123:16124 Poly <> ::'['_']' not
R16132:16133 Poly <> ::'['_']' not
R16139:16139 Poly <> ::'('_x_','_x_')' not
R16141:16141 Poly <> ::'('_x_','_x_')' not
R16144:16144 Poly <> ::'('_x_','_x_')' not
R16142:16143 Poly <> ::'['_']' not
R16149:16150 Poly <> ::'['_']' not
R16156:16156 Poly <> ::'('_x_','_x_')' not
R16162:16163 Poly <> ::'('_x_','_x_')' not
R16169:16169 Poly <> ::'('_x_','_x_')' not
R16158:16159 Poly <> ::x_'::'_x not
R16165:16166 Poly <> ::x_'::'_x not
R16179:16183 Poly <> ::x_'::'_x not
R16197:16197 Poly <> ::x_'::'_x not
R16174:16174 Poly <> ::'('_x_','_x_')' not
R16176:16176 Poly <> ::'('_x_','_x_')' not
R16178:16178 Poly <> ::'('_x_','_x_')' not
R16184:16190 Poly <> combine def
def 16995:16999 <> split
R17030:17033 Poly <> list ind
R17037:17037 Poly <> :type_scope:x_'*'_x not
R17036:17036 Poly <> X var
R17038:17038 Poly <> Y var
R17055:17055 Poly <> :type_scope:x_'*'_x not
R17062:17066 Poly <> :type_scope:x_'*'_x not
R17073:17073 Poly <> :type_scope:x_'*'_x not
R17056:17059 Poly <> list ind
R17061:17061 Poly <> X var
R17067:17070 Poly <> list ind
R17072:17072 Poly <> Y var
R17086:17086 Poly <> l var
R17106:17107 Poly <> ::x_'::'_x not
R17100:17100 Poly <> ::'('_x_','_x_')' not
R17102:17103 Poly <> ::'('_x_','_x_')' not
R17105:17105 Poly <> ::'('_x_','_x_')' not
R17127:17131 Poly <> split def
R17164:17164 Poly <> ::'('_x_','_x_')' not
R17177:17178 Poly <> ::'('_x_','_x_')' not
R17191:17191 Poly <> ::'('_x_','_x_')' not
R17166:17169 Poly <> ::x_'::'_x not
R17170:17172 Poly <> fst def
R17174:17176 Poly <> res var
R17180:17183 Poly <> ::x_'::'_x not
R17184:17186 Poly <> snd def
R17188:17190 Poly <> res var
R17200:17202 Poly <> nil constr
R17207:17207 Poly <> ::'('_x_','_x_')' not
R17211:17212 Poly <> ::'('_x_','_x_')' not
R17216:17216 Poly <> ::'('_x_','_x_')' not
R17208:17210 Poly <> nil constr
R17213:17215 Poly <> nil constr
def 17234:17243 <> test_split
R17275:17277 Coq.Init.Logic <> :type_scope:x_'='_x not
R17248:17252 Poly <> split def
R17254:17254 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17264:17264 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17274:17274 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17265:17265 Poly <> ::'('_x_','_x_')' not
R17267:17267 Poly <> ::'('_x_','_x_')' not
R17273:17273 Poly <> ::'('_x_','_x_')' not
R17268:17272 Basics <> false constr
R17255:17255 Poly <> ::'('_x_','_x_')' not
R17257:17257 Poly <> ::'('_x_','_x_')' not
R17263:17263 Poly <> ::'('_x_','_x_')' not
R17258:17262 Basics <> false constr
R17278:17278 Poly <> ::'('_x_','_x_')' not
R17284:17284 Poly <> ::'('_x_','_x_')' not
R17298:17298 Poly <> ::'('_x_','_x_')' not
R17279:17279 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17281:17281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17283:17283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17285:17285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17291:17291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17297:17297 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17292:17296 Basics <> false constr
R17286:17290 Basics <> false constr
ind 17588:17593 <> option
constr 17618:17621 <> Some
constr 17643:17646 <> None
R17630:17635 Poly <> option ind
R17650:17655 Poly <> option ind
R17671:17674 Poly <> Some constr
R17671:17674 Poly <> Some constr
R17694:17697 Poly <> None constr
R17694:17697 Poly <> None constr
def 17808:17812 <> index
R17830:17832 Coq.Init.Datatypes <> nat ind
R17855:17858 Poly <> list ind
R17860:17860 Poly <> X var
R17865:17870 Poly <> option ind
R17872:17872 Poly <> X var
R17885:17885 Poly <> l var
R17896:17897 Poly <> ::'['_']' not
R17902:17905 Poly <> None constr
R17912:17915 Poly <> ::x_'::'_x not
R17925:17931 Basics <> beq_nat def
R17935:17935 Coq.Init.Datatypes <> O constr
R17933:17933 Poly <> n var
R17954:17958 Poly <> index def
R17961:17964 Coq.Init.Peano <> pred def
R17966:17966 Poly <> n var
R17942:17945 Poly <> Some constr
def 17988:17998 <> test_index1
R18022:18025 Coq.Init.Logic <> :type_scope:x_'='_x not
R18005:18009 Poly <> index def
R18013:18013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18015:18015 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18017:18017 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18019:18019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18021:18021 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18026:18029 Poly <> Some constr
def 18068:18078 <> test_index2
R18103:18106 Coq.Init.Logic <> :type_scope:x_'='_x not
R18085:18089 Poly <> index def
R18094:18094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18098:18098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18102:18102 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18099:18099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18101:18101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18095:18095 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18097:18097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18107:18110 Poly <> Some constr
R18112:18112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18114:18114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18151:18161 <> test_index3
R18183:18186 Coq.Init.Logic <> :type_scope:x_'='_x not
R18168:18172 Poly <> index def
R18177:18177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18182:18182 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18178:18181 Basics <> true constr
R18187:18190 Poly <> None constr
def 18442:18447 <> hd_opt
R18465:18468 Poly <> list ind
R18470:18470 Poly <> X var
R18476:18481 Poly <> option ind
R18483:18483 Poly <> X var
R18496:18496 Poly <> l var
R18512:18513 Poly <> ::x_'::'_x not
R18520:18523 Poly <> Some constr
R18535:18537 Poly <> nil constr
R18542:18545 Poly <> None constr
R18682:18687 Poly <> hd_opt def
def 18699:18710 <> test_hd_opt1
R18727:18729 Coq.Init.Logic <> :type_scope:x_'='_x not
R18715:18720 Poly <> hd_opt def
R18722:18722 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18724:18724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18726:18726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18730:18733 Poly <> Some constr
def 18773:18784 <> test_hd_opt2
R18807:18810 Coq.Init.Logic <> :type_scope:x_'='_x not
R18790:18795 Poly <> hd_opt def
R18798:18798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18802:18802 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18806:18806 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18803:18803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18805:18805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18799:18799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18801:18801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18811:18814 Poly <> Some constr
R18816:18816 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18818:18818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19472:19481 <> doit3times
R19498:19498 Poly <> X var
R19495:19495 Poly <> X var
R19504:19504 Poly <> X var
R19509:19509 Poly <> X var
R19516:19516 Poly <> f var
R19519:19519 Poly <> f var
R19522:19522 Poly <> f var
R19524:19524 Poly <> n var
R19683:19692 Poly <> doit3times def
def 19764:19778 <> test_doit3times
R19802:19804 Coq.Init.Logic <> :type_scope:x_'='_x not
R19781:19790 Poly <> doit3times def
R19792:19799 Basics <> minustwo def
def 19843:19858 <> test_doit3times'
R19881:19883 Coq.Init.Logic <> :type_scope:x_'='_x not
R19861:19870 Poly <> doit3times def
R19877:19880 Basics <> true constr
R19872:19875 Basics <> negb def
R19884:19888 Basics <> false constr
R20182:20185 Coq.Init.Peano <> plus def
def 20907:20911 <> plus3
R20916:20919 Coq.Init.Peano <> plus def
R20930:20934 Poly <> plus3 def
def 20946:20955 <> test_plus3
R20969:20971 Coq.Init.Logic <> :type_scope:x_'='_x not
R20962:20966 Poly <> plus3 def
def 21009:21019 <> test_plus3'
R21043:21045 Coq.Init.Logic <> :type_scope:x_'='_x not
R21025:21034 Poly <> doit3times def
R21036:21040 Poly <> plus3 def
def 21083:21094 <> test_plus3''
R21120:21122 Coq.Init.Logic <> :type_scope:x_'='_x not
R21099:21108 Poly <> doit3times def
R21111:21114 Coq.Init.Peano <> plus def
def 22046:22055 <> prod_curry
R22088:22088 Poly <> Z var
R22080:22082 Poly <> :type_scope:x_'*'_x not
R22079:22079 Poly <> X var
R22083:22083 Poly <> Y var
R22096:22096 Poly <> X var
R22104:22104 Poly <> Y var
R22109:22109 Poly <> Z var
R22114:22114 Poly <> f var
R22116:22116 Poly <> ::'('_x_','_x_')' not
R22118:22119 Poly <> ::'('_x_','_x_')' not
R22121:22121 Poly <> ::'('_x_','_x_')' not
R22117:22117 Poly <> x var
R22120:22120 Poly <> y var
def 22266:22277 <> prod_uncurry
R22311:22311 Poly <> Z var
R22306:22306 Poly <> Y var
R22301:22301 Poly <> X var
R22320:22322 Poly <> :type_scope:x_'*'_x not
R22319:22319 Poly <> X var
R22323:22323 Poly <> Y var
R22328:22328 Poly <> Z var
R22333:22333 Poly <> f var
R22344:22346 Poly <> snd def
R22348:22348 Poly <> p var
R22336:22338 Poly <> fst def
R22340:22340 Poly <> p var
R22490:22499 Poly <> prod_curry def
R22558:22569 Poly <> prod_uncurry def
prf 22636:22648 <> uncurry_curry
R22689:22689 Poly <> Z var
R22684:22684 Poly <> Y var
R22679:22679 Poly <> X var
R22730:22732 Coq.Init.Logic <> :type_scope:x_'='_x not
R22699:22708 Poly <> prod_curry def
R22729:22729 Poly <> y var
R22727:22727 Poly <> x var
R22711:22722 Poly <> prod_uncurry def
R22724:22724 Poly <> f var
R22733:22733 Poly <> f var
R22737:22737 Poly <> y var
R22735:22735 Poly <> x var
prf 22785:22797 <> curry_uncurry
R22870:22870 Poly <> Z var
R22861:22863 Poly <> :type_scope:x_'*'_x not
R22860:22860 Poly <> X var
R22864:22864 Poly <> Y var
R22879:22881 Poly <> :type_scope:x_'*'_x not
R22878:22878 Poly <> X var
R22882:22882 Poly <> Y var
R22917:22919 Coq.Init.Logic <> :type_scope:x_'='_x not
R22888:22899 Poly <> prod_uncurry def
R22916:22916 Poly <> p var
R22902:22911 Poly <> prod_curry def
R22913:22913 Poly <> f var
R22920:22920 Poly <> f var
R22922:22922 Poly <> p var
def 23301:23306 <> filter
R23327:23330 Basics <> bool ind
R23324:23324 Poly <> X var
R23336:23339 Poly <> list ind
R23341:23341 Poly <> X var
R23363:23366 Poly <> list ind
R23368:23368 Poly <> X var
R23382:23382 Poly <> l var
R23393:23394 Poly <> ::'['_']' not
R23403:23404 Poly <> ::'['_']' not
R23411:23414 Poly <> ::x_'::'_x not
R23423:23426 Poly <> test var
R23491:23496 Poly <> filter def
R23498:23501 Poly <> test var
R23436:23440 Poly <> ::x_'::'_x not
R23454:23454 Poly <> ::x_'::'_x not
R23441:23446 Poly <> filter def
R23448:23451 Poly <> test var
def 23682:23693 <> test_filter1
R23718:23720 Coq.Init.Logic <> :type_scope:x_'='_x not
R23696:23701 Poly <> filter def
R23709:23709 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23711:23711 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23713:23713 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23715:23715 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23717:23717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23703:23707 Basics <> evenb def
R23721:23721 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23723:23723 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23725:23725 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23766:23776 <> length_is_1
R23794:23797 Poly <> list ind
R23799:23799 Poly <> X var
R23804:23807 Basics <> bool ind
R23814:23820 Basics <> beq_nat def
R23823:23828 Poly <> length def
R23830:23830 Poly <> l var
def 23845:23856 <> test_filter2
R23931:23935 Coq.Init.Logic <> :type_scope:x_'='_x not
R23863:23868 Poly <> filter def
R23893:23894 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23901:23902 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23906:23907 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23911:23912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23920:23921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23924:23925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23929:23930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23926:23926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23928:23928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23922:23923 Poly <> ::'['_']' not
R23913:23913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23915:23915 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23917:23917 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23919:23919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23908:23908 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23910:23910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23903:23903 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23905:23905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23895:23895 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23897:23898 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23900:23900 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23870:23880 Poly <> length_is_1 def
R23936:23937 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23941:23942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23946:23947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23951:23952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23948:23948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23950:23950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23943:23943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23945:23945 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23938:23938 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23940:23940 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24111:24126 <> countoddmembers'
R24131:24134 Poly <> list ind
R24136:24138 Coq.Init.Datatypes <> nat ind
R24143:24145 Coq.Init.Datatypes <> nat ind
R24152:24157 Poly <> length def
R24160:24165 Poly <> filter def
R24172:24172 Poly <> l var
R24167:24170 Basics <> oddb def
def 24185:24206 <> test_countoddmembers'1
R24241:24243 Coq.Init.Logic <> :type_scope:x_'='_x not
R24211:24226 Poly <> countoddmembers' def
R24228:24228 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24230:24230 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24232:24232 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24234:24234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24236:24236 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24238:24238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24240:24240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24281:24302 <> test_countoddmembers'2
R24331:24333 Coq.Init.Logic <> :type_scope:x_'='_x not
R24307:24322 Poly <> countoddmembers' def
R24324:24324 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24326:24326 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24328:24328 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24330:24330 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24371:24392 <> test_countoddmembers'3
R24417:24419 Coq.Init.Logic <> :type_scope:x_'='_x not
R24397:24412 Poly <> countoddmembers' def
R24414:24416 Poly <> nil constr
def 25286:25299 <> test_anon_fun'
R25333:25335 Coq.Init.Logic <> :type_scope:x_'='_x not
R25304:25313 Poly <> doit3times def
R25326:25328 Basics <> :nat_scope:x_'*'_x not
R25325:25325 Poly <> n var
R25329:25329 Poly <> n var
def 25472:25484 <> test_filter2'
R25579:25583 Coq.Init.Logic <> :type_scope:x_'='_x not
R25491:25496 Poly <> filter def
R25541:25542 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25549:25550 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25554:25555 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25559:25560 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25568:25569 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25572:25573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25577:25578 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25574:25574 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25576:25576 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25570:25571 Poly <> ::'['_']' not
R25561:25561 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25563:25563 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25565:25565 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25567:25567 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25556:25556 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25558:25558 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25551:25551 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25553:25553 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25543:25543 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25545:25546 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25548:25548 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25508:25514 Basics <> beq_nat def
R25517:25522 Poly <> length def
R25524:25524 Poly <> l var
R25584:25585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25589:25590 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25594:25595 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25599:25600 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25596:25596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25598:25598 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25591:25591 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25593:25593 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25586:25586 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25588:25588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25902:25916 <> filter_even_gt7
R25923:25926 Poly <> list ind
R25928:25930 Coq.Init.Datatypes <> nat ind
R25935:25938 Poly <> list ind
R25940:25942 Coq.Init.Datatypes <> nat ind
R25949:25954 Poly <> filter def
R26003:26003 Poly <> l var
R25966:25969 Basics <> andb def
R25982:25985 Basics <> negb def
R25988:25994 Basics <> blt_nat def
R25996:25996 Poly <> x var
R25972:25976 Basics <> evenb def
R25978:25978 Poly <> x var
def 26015:26036 <> test_filter_even_gt7_1
R26077:26079 Coq.Init.Logic <> :type_scope:x_'='_x not
R26042:26056 Poly <> filter_even_gt7 def
R26058:26058 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26060:26060 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26062:26062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26064:26064 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26066:26066 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26069:26069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26071:26071 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26074:26074 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26076:26076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26080:26080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26083:26083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26086:26086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26088:26088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26125:26146 <> test_filter_even_gt7_2
R26182:26184 Coq.Init.Logic <> :type_scope:x_'='_x not
R26152:26166 Poly <> filter_even_gt7 def
R26168:26168 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26170:26170 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26172:26172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26174:26174 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26177:26177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26181:26181 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26185:26186 Poly <> ::'['_']' not
def 26824:26832 <> partition
R26858:26861 Basics <> bool ind
R26853:26853 Poly <> X var
R26869:26872 Poly <> list ind
R26874:26874 Poly <> X var
R26906:26908 Poly <> :type_scope:x_'*'_x not
R26900:26903 Poly <> list ind
R26905:26905 Poly <> X var
R26909:26912 Poly <> list ind
R26914:26914 Poly <> X var
R26921:26921 Poly <> ::'('_x_','_x_')' not
R26935:26936 Poly <> ::'('_x_','_x_')' not
R26970:26970 Poly <> ::'('_x_','_x_')' not
R26922:26927 Poly <> filter def
R26934:26934 Poly <> l var
R26929:26932 Poly <> test var
R26937:26942 Poly <> filter def
R26969:26969 Poly <> l var
R26954:26957 Basics <> negb def
R26960:26963 Poly <> test var
R26965:26965 Poly <> x var
def 26982:26996 <> test_partition1
R27025:27027 Coq.Init.Logic <> :type_scope:x_'='_x not
R26999:27007 Poly <> partition def
R27014:27014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27016:27016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27018:27018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27020:27020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27022:27022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27024:27024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27009:27012 Basics <> oddb def
R27028:27028 Poly <> ::'('_x_','_x_')' not
R27036:27037 Poly <> ::'('_x_','_x_')' not
R27043:27043 Poly <> ::'('_x_','_x_')' not
R27029:27029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27031:27031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27033:27033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27035:27035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27038:27038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27040:27040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27042:27042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27079:27093 <> test_partition2
R27130:27132 Coq.Init.Logic <> :type_scope:x_'='_x not
R27096:27104 Poly <> partition def
R27123:27123 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27125:27125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27127:27127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27129:27129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27116:27120 Basics <> false constr
R27133:27133 Poly <> ::'('_x_','_x_')' not
R27136:27137 Poly <> ::'('_x_','_x_')' not
R27145:27145 Poly <> ::'('_x_','_x_')' not
R27134:27135 Poly <> ::'['_']' not
R27138:27138 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27140:27140 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27142:27142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27144:27144 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27320:27322 <> map
R27341:27341 Poly <> Y var
R27338:27338 Poly <> X var
R27347:27350 Poly <> list ind
R27352:27352 Poly <> X var
R27371:27374 Poly <> list ind
R27376:27376 Poly <> Y var
R27390:27390 Poly <> l var
R27401:27402 Poly <> ::'['_']' not
R27411:27412 Poly <> ::'['_']' not
R27419:27422 Poly <> ::x_'::'_x not
R27428:27428 Poly <> ::x_'::'_x not
R27432:27437 Poly <> ::x_'::'_x not
R27445:27445 Poly <> ::x_'::'_x not
R27429:27429 Poly <> f var
R27438:27440 Poly <> map def
R27442:27442 Poly <> f var
def 27662:27670 <> test_map1
R27693:27695 Coq.Init.Logic <> :type_scope:x_'='_x not
R27673:27675 Poly <> map def
R27686:27686 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27688:27688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27690:27690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27692:27692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27678:27681 Coq.Init.Peano <> plus def
R27696:27696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27698:27698 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27700:27700 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27702:27702 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28011:28019 <> test_map2
R28040:28042 Coq.Init.Logic <> :type_scope:x_'='_x not
R28022:28024 Poly <> map def
R28031:28031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28033:28033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28035:28035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28037:28037 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28039:28039 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28026:28029 Basics <> oddb def
R28043:28043 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28049:28049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28054:28054 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28060:28060 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28065:28065 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28061:28064 Basics <> true constr
R28055:28059 Basics <> false constr
R28050:28053 Basics <> true constr
R28044:28048 Basics <> false constr
def 28252:28260 <> test_map3
R28308:28312 Coq.Init.Logic <> :type_scope:x_'='_x not
R28267:28269 Poly <> map def
R28299:28299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28301:28301 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28303:28303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28305:28305 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28307:28307 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28281:28281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28289:28289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28296:28296 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28290:28293 Basics <> oddb def
R28295:28295 Poly <> n var
R28282:28286 Basics <> evenb def
R28288:28288 Poly <> n var
R28313:28313 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28326:28326 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28339:28339 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28352:28352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28365:28365 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28353:28353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28359:28359 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28364:28364 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28360:28363 Basics <> true constr
R28354:28358 Basics <> false constr
R28340:28340 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28345:28345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28351:28351 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28346:28350 Basics <> false constr
R28341:28344 Basics <> true constr
R28327:28327 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28333:28333 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28338:28338 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28334:28337 Basics <> true constr
R28328:28332 Basics <> false constr
R28314:28314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28319:28319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28325:28325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28320:28324 Basics <> false constr
R28315:28318 Basics <> true constr
prf 28536:28543 <> MapDistr
R28576:28579 Poly <> list ind
R28581:28581 Poly <> X var
R28594:28594 Poly <> Y var
R28589:28589 Poly <> X var
R28636:28638 Coq.Init.Logic <> :type_scope:x_'='_x not
R28620:28622 Poly <> map def
R28629:28632 Poly <> ::x_'++'_x not
R28627:28628 Poly <> l1 var
R28633:28634 Poly <> l2 var
R28624:28624 Poly <> f var
R28647:28650 Poly <> ::x_'++'_x not
R28639:28641 Poly <> map def
R28645:28646 Poly <> l1 var
R28643:28643 Poly <> f var
R28651:28653 Poly <> map def
R28657:28658 Poly <> l2 var
R28655:28655 Poly <> f var
prf 28772:28778 <> SnocApp
R28805:28808 Poly <> list ind
R28810:28810 Poly <> X var
R28818:28818 Poly <> X var
R28851:28853 Coq.Init.Logic <> :type_scope:x_'='_x not
R28843:28846 Poly <> snoc def
R28850:28850 Poly <> v var
R28848:28848 Poly <> l var
R28855:28858 Poly <> ::x_'++'_x not
R28854:28854 Poly <> l var
R28859:28859 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28861:28861 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28860:28860 Poly <> v var
prf 28974:28980 <> map_rev
R29014:29014 Poly <> Y var
R29009:29009 Poly <> X var
R29022:29025 Poly <> list ind
R29027:29027 Poly <> X var
R29046:29048 Coq.Init.Logic <> :type_scope:x_'='_x not
R29033:29035 Poly <> map def
R29040:29042 Poly <> rev def
R29044:29044 Poly <> l var
R29037:29037 Poly <> f var
R29049:29051 Poly <> rev def
R29054:29056 Poly <> map def
R29060:29060 Poly <> l var
R29058:29058 Poly <> f var
R29141:29147 Poly <> SnocApp thm
R29141:29147 Poly <> SnocApp thm
R29161:29167 Poly <> SnocApp thm
R29161:29167 Poly <> SnocApp thm
R29181:29188 Poly <> MapDistr thm
R29181:29188 Poly <> MapDistr thm
def 29687:29694 <> flat_map
R29715:29718 Poly <> list ind
R29720:29720 Poly <> Y var
R29710:29710 Poly <> X var
R29726:29729 Poly <> list ind
R29731:29731 Poly <> X var
R29756:29759 Poly <> list ind
R29761:29761 Poly <> Y var
R29775:29775 Poly <> l var
R29789:29791 Poly <> nil constr
R29796:29798 Poly <> nil constr
R29808:29809 Poly <> ::x_'::'_x not
R29819:29822 Poly <> ::x_'++'_x not
R29816:29816 Poly <> f var
R29823:29830 Poly <> flat_map def
R29832:29832 Poly <> f var
def 29853:29866 <> test_flat_map1
R29906:29910 Coq.Init.Logic <> :type_scope:x_'='_x not
R29871:29878 Poly <> flat_map def
R29899:29899 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29901:29901 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29903:29903 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29905:29905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29890:29890 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29892:29892 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29894:29894 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29896:29896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29895:29895 Poly <> n var
R29893:29893 Poly <> n var
R29891:29891 Poly <> n var
R29911:29911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29913:29914 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29916:29917 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29919:29920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29922:29923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29925:29926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29928:29929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29931:29932 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29934:29935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29937:29937 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 30128:30137 <> option_map
R30162:30162 Poly <> Y var
R30157:30157 Poly <> X var
R30171:30176 Poly <> option ind
R30178:30178 Poly <> X var
R30205:30210 Poly <> option ind
R30212:30212 Poly <> Y var
R30225:30226 Poly <> xo var
R30239:30242 Poly <> None constr
R30247:30250 Poly <> None constr
R30258:30261 Poly <> Some constr
R30268:30271 Poly <> Some constr
R30274:30274 Poly <> f var
def 31095:31098 <> fold
R31121:31121 Poly <> Y var
R31118:31118 Poly <> Y var
R31115:31115 Poly <> X var
R31127:31130 Poly <> list ind
R31132:31132 Poly <> X var
R31138:31138 Poly <> Y var
R31143:31143 Poly <> Y var
R31156:31156 Poly <> l var
R31167:31169 Poly <> nil constr
R31174:31174 Poly <> b var
R31181:31184 Poly <> ::x_'::'_x not
R31190:31190 Poly <> f var
R31195:31198 Poly <> fold def
R31204:31204 Poly <> b var
R31200:31200 Poly <> f var
R31677:31680 Poly <> fold def
R31682:31685 Basics <> andb def
def 31747:31759 <> fold_example1
R31784:31786 Coq.Init.Logic <> :type_scope:x_'='_x not
R31763:31766 Poly <> fold def
R31773:31773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31775:31775 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31777:31777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31779:31779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31781:31781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31768:31771 Coq.Init.Peano <> mult def
def 31825:31837 <> fold_example2
R31878:31880 Coq.Init.Logic <> :type_scope:x_'='_x not
R31841:31844 Poly <> fold def
R31874:31877 Basics <> true constr
R31851:31851 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31856:31856 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31861:31861 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31867:31867 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31872:31872 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31868:31871 Basics <> true constr
R31862:31866 Basics <> false constr
R31857:31860 Basics <> true constr
R31852:31855 Basics <> true constr
R31846:31849 Basics <> andb def
R31881:31885 Basics <> false constr
def 31922:31934 <> fold_example3
R31969:31971 Coq.Init.Logic <> :type_scope:x_'='_x not
R31938:31941 Poly <> fold def
R31967:31968 Poly <> ::'['_']' not
R31948:31948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31952:31952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31955:31955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31961:31961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31965:31965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31962:31962 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31964:31964 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31956:31956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31958:31958 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31960:31960 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31953:31954 Poly <> ::'['_']' not
R31949:31949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31951:31951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31943:31945 Poly <> app def
R31972:31972 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31974:31974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31976:31976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31978:31978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31980:31980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 32896:32903 <> constfun
R32919:32919 Poly <> X var
R32929:32929 Poly <> X var
R32924:32926 Coq.Init.Datatypes <> nat ind
R32943:32945 Coq.Init.Datatypes <> nat ind
R32951:32951 Poly <> x var
def 32966:32970 <> ftrue
R32975:32982 Poly <> constfun def
R32984:32987 Basics <> true constr
def 32999:33015 <> constfun_example1
R33026:33028 Coq.Init.Logic <> :type_scope:x_'='_x not
R33019:33023 Poly <> ftrue def
R33029:33032 Basics <> true constr
def 33069:33085 <> constfun_example2
R33104:33106 Coq.Init.Logic <> :type_scope:x_'='_x not
R33090:33097 Poly <> constfun def
def 33439:33446 <> override
R33467:33467 Poly <> X var
R33462:33464 Coq.Init.Datatypes <> nat ind
R33473:33475 Coq.Init.Datatypes <> nat ind
R33481:33481 Poly <> X var
R33491:33491 Poly <> X var
R33486:33488 Coq.Init.Datatypes <> nat ind
R33505:33507 Coq.Init.Datatypes <> nat ind
R33516:33522 Basics <> beq_nat def
R33526:33527 Poly <> k' var
R33524:33524 Poly <> k var
R33541:33541 Poly <> f var
R33543:33544 Poly <> k' var
R33534:33534 Poly <> x var
def 33743:33753 <> fmostlytrue
R33758:33765 Poly <> override def
R33794:33798 Basics <> false constr
R33768:33775 Poly <> override def
R33785:33789 Basics <> false constr
R33777:33781 Poly <> ftrue def
def 33810:33826 <> override_example1
R33843:33845 Coq.Init.Logic <> :type_scope:x_'='_x not
R33830:33840 Poly <> fmostlytrue def
R33846:33849 Basics <> true constr
def 33886:33902 <> override_example2
R33919:33921 Coq.Init.Logic <> :type_scope:x_'='_x not
R33906:33916 Poly <> fmostlytrue def
R33922:33926 Basics <> false constr
def 33963:33979 <> override_example3
R33996:33998 Coq.Init.Logic <> :type_scope:x_'='_x not
R33983:33993 Poly <> fmostlytrue def
R33999:34002 Basics <> true constr
def 34039:34055 <> override_example4
R34072:34074 Coq.Init.Logic <> :type_scope:x_'='_x not
R34059:34069 Poly <> fmostlytrue def
R34075:34079 Basics <> false constr
prf 34424:34439 <> override_example
R34453:34456 Basics <> bool ind
R34494:34496 Coq.Init.Logic <> :type_scope:x_'='_x not
R34463:34470 Poly <> override def
R34487:34490 Basics <> true constr
R34473:34480 Poly <> constfun def
R34482:34482 Poly <> b var
R34497:34497 Poly <> b var
prf 35439:35456 <> unfold_example_bad
R35500:35502 Coq.Init.Logic <> :type_scope:x_'='_x not
R35496:35498 Basics <> :nat_scope:x_'+'_x not
R35489:35493 Poly <> plus3 def
R35495:35495 Poly <> n var
R35504:35506 Basics <> :nat_scope:x_'+'_x not
R35503:35503 Poly <> m var
R35479:35481 Coq.Init.Logic <> :type_scope:x_'='_x not
R35475:35477 Basics <> :nat_scope:x_'+'_x not
R35478:35478 Poly <> n var
R35482:35482 Poly <> m var
prf 35870:35883 <> unfold_example
R35927:35929 Coq.Init.Logic <> :type_scope:x_'='_x not
R35923:35925 Basics <> :nat_scope:x_'+'_x not
R35916:35920 Poly <> plus3 def
R35922:35922 Poly <> n var
R35931:35933 Basics <> :nat_scope:x_'+'_x not
R35930:35930 Poly <> m var
R35906:35908 Coq.Init.Logic <> :type_scope:x_'='_x not
R35902:35904 Basics <> :nat_scope:x_'+'_x not
R35905:35905 Poly <> n var
R35909:35909 Poly <> m var
R35969:35973 Poly <> plus3 def
prf 36190:36200 <> override_eq
R36232:36232 Poly <> X var
R36227:36229 Coq.Init.Datatypes <> nat ind
R36256:36258 Coq.Init.Logic <> :type_scope:x_'='_x not
R36239:36246 Poly <> override def
R36252:36252 Poly <> x var
R36250:36250 Poly <> k var
R36248:36248 Poly <> f var
R36255:36255 Poly <> k var
R36259:36259 Poly <> x var
R36296:36303 Poly <> override def
R36319:36330 Induction <> beq_nat_refl thm
R36319:36330 Induction <> beq_nat_refl thm
prf 36527:36538 <> override_neq
R36580:36580 Poly <> X var
R36575:36577 Coq.Init.Datatypes <> nat ind
R36649:36651 Coq.Init.Logic <> :type_scope:x_'='_x not
R36629:36636 Poly <> override def
R36643:36644 Poly <> x2 var
R36640:36641 Poly <> k2 var
R36638:36638 Poly <> f var
R36647:36648 Poly <> k1 var
R36652:36653 Poly <> x1 var
R36614:36616 Coq.Init.Logic <> :type_scope:x_'='_x not
R36601:36607 Basics <> beq_nat def
R36612:36613 Poly <> k1 var
R36609:36610 Poly <> k2 var
R36617:36621 Basics <> false constr
R36590:36592 Coq.Init.Logic <> :type_scope:x_'='_x not
R36586:36586 Poly <> f var
R36588:36589 Poly <> k1 var
R36593:36594 Poly <> x1 var
R36683:36690 Poly <> override def
def 37187:37197 <> fold_length
R37215:37218 Poly <> list ind
R37220:37220 Poly <> X var
R37225:37227 Coq.Init.Datatypes <> nat ind
R37234:37237 Poly <> fold def
R37256:37256 Poly <> l var
R37251:37251 Coq.Init.Datatypes <> S constr
R37253:37253 Poly <> n var
def 37270:37286 <> test_fold_length1
R37309:37311 Coq.Init.Logic <> :type_scope:x_'='_x not
R37290:37300 Poly <> fold_length def
R37302:37302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37304:37304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37306:37306 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37308:37308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 37397:37415 <> fold_length_correct
R37433:37436 Poly <> list ind
R37438:37438 Poly <> X var
R37457:37459 Coq.Init.Logic <> :type_scope:x_'='_x not
R37444:37454 Poly <> fold_length def
R37456:37456 Poly <> l var
R37460:37465 Poly <> length def
R37467:37467 Poly <> l var
R37496:37506 Poly <> fold_length def
def 37729:37736 <> fold_map
R37759:37759 Poly <> Y var
R37754:37754 Poly <> X var
R37767:37770 Poly <> list ind
R37772:37772 Poly <> X var
R37777:37780 Poly <> list ind
R37782:37782 Poly <> Y var
R37789:37792 Poly <> fold def
R37818:37820 Poly <> nil constr
R37816:37816 Poly <> l var
R37809:37812 Poly <> ::x_'::'_x not
R37806:37806 Poly <> f var
R37808:37808 Poly <> x var
R37813:37813 Poly <> y var
prf 37923:37932 <> mapCorrect
R37966:37966 Poly <> Y var
R37961:37961 Poly <> X var
R37974:37977 Poly <> list ind
R37979:37979 Poly <> X var
R38019:38021 Coq.Init.Logic <> :type_scope:x_'='_x not
R38007:38014 Poly <> fold_map def
R38018:38018 Poly <> l var
R38016:38016 Poly <> f var
R38022:38024 Poly <> map def
R38028:38028 Poly <> l var
R38026:38026 Poly <> f var
R38057:38064 Poly <> fold_map def
